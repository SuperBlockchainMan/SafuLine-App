{"version":3,"sources":["../node_modules/lodash/_createSet.js","views/Nft/market/hooks/useAllPancakeBunnyNfts.ts","../node_modules/lodash/capitalize.js","views/Nft/market/Collection/Items/PancakeBunniesCollectionNfts.tsx","components/ScrollToTopButton/index.tsx","views/Nft/market/components/Filters/ListFilter/styles.tsx","views/Nft/market/components/Filters/ListFilter/index.tsx","views/Nft/market/Collection/Items/ClearAllButton.tsx","views/Nft/market/Collection/Items/SortSelect.tsx","views/Nft/market/Collection/Items/Filters.tsx","views/Nft/market/Collection/config.ts","views/Nft/market/Collection/Items/CollectionNfts.tsx","views/Nft/market/Collection/Items/FilteredCollectionNfts.tsx","views/Nft/market/Collection/Items/CollectionWrapper.tsx","views/Nft/market/Collection/Items/index.tsx","views/Nft/market/components/StatBox.tsx","components/AddressInputSelect/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","../node_modules/lodash/_hasUnicode.js","views/Nft/market/components/GridPlaceholder.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","../node_modules/lodash/upperFirst.js","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","views/Nft/market/hooks/useGetCollectionDistribution.tsx","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/uniqBy.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js"],"names":["Set","require","noop","setToArray","createSet","values","module","exports","useAllPancakeBunnyNfts","collectionAddress","useState","allPancakeBunnyNfts","setAllPancakeBunnyNfts","isPBCollection","pancakeBunniesAddress","useEffect","a","getNftsFromCollectionApi","data","bunnyIds","Object","keys","getAllPancakeBunniesLowestPrice","lowestPrices","getAllPancakeBunniesRecentUpdatedAt","latestUpdates","allBunnies","map","bunnyId","tokenId","name","description","collectionName","collection","image","attributes","traitType","value","displayType","meta","currentAskPrice","updatedAt","fetchPancakeBunnies","toString","upperFirst","string","toLowerCase","PancakeBunniesCollectionNfts","sortBy","address","sortedNfts","orderBy","nft","Number","length","gridGap","gridTemplateColumns","alignItems","GridPlaceholder","FixedContainer","styled","div","ScrollToTopButton","visible","setVisible","t","useTranslation","toggleVisible","scrolled","document","documentElement","scrollTop","window","addEventListener","removeEventListener","style","display","variant","endIcon","color","onClick","scrollTo","top","behavior","StyledItemRow","Flex","ItemImage","Image","ItemRow","item","isSelected","onSelect","px","py","src","height","width","mr","flex","label","undefined","count","formatNumber","scale","checked","onChange","ml","SearchWrapper","theme","colors","dropdown","FilterButton","TriggerButton","Button","hasItem","CloseButton","IconButton","ListFilter","title","items","isOpen","setIsOpen","query","setQuery","orderKey","orderDir","orderState","setOrderState","wrapperRef","useRef","menuRef","nftFilters","useGetNftFilters","nftFilterState","useGetNftFilterLoadingState","dispatch","useAppDispatch","traitFilter","isTraitSelected","filteredItems","filter","indexOf","toggleSort","newOrderKey","prevOrderDir","handleClickOutside","target","current","contains","mb","ref","component","disabled","FetchStatus","Fetching","options","placement","maxWidth","p","startIcon","placeholder","evt","fontSize","fontWeight","textTransform","overflowY","filteredItem","isItemSelected","attr","filterNftsFromCollection","handleItemSelect","justifyContent","textAlign","newFilters","ClearAllButton","props","removeAllFilters","SortSelect","selectedOrder","useGetNftOrdering","sortByItems","field","direction","defaultOptionIndex","findIndex","option","Select","onOptionChange","newOption","setOrdering","GridContainer","Grid","mediaQueries","sm","md","lg","xxl","FilterByTitle","Text","FilterByControls","Box","SortByTitle","SortByControls","ScrollableFlexContainer","Filters","useGetCollectionDistribution","showOnlyNftsOnSale","useGetNftShowOnlyOnSale","activeButtonIndex","setActiveButtonIndex","attrsByType","reduce","accum","uniqueTraitTypes","bold","activeIndex","onItemClick","newIndex","setShowOnlyOnSale","showOnlyOnSale","capitalize","isEmpty","REQUEST_SIZE","CollectionNfts","totalSupply","numberTokensListed","page","setPage","skip","setSkip","nfts","setNfts","isFetchingFilteredNfts","setIsFetchingFilteredNfts","collectionNfts","useNftsFromCollection","nftFilterLoadingState","orderField","orderDirection","isFetching","fetchApiData","marketData","apiRequestPromises","marketNft","getNftApi","Promise","all","apiResponses","responsesWithMarketData","apiNft","i","prevState","combinedNfts","uniqBy","fetchMarketData","getNftsMarketData","isTradable","subgraphRes","fetchNftsFromCollections","size","nftsToShow","isNotLastPage","resultsAmount","currentAskPriceAsNumber","parseFloat","mt","prevPage","spin","FilteredCollectionNfts","numToShow","setNumToShow","orderedNfts","Infinity","tokenIdNumber","isFinite","parseInt","filteredNfts","slice","prevNumToShow","flexDirection","CollectionWrapper","Container","createPortal","body","Items","useParams","setSortBy","useGetCollection","fetchCollection","Header","minWidth","StatBoxItem","stat","mx","StatBox","invertedContrast","cardBorder","radii","card","ResultStatus","SubMenu","input","inputSecondary","default","AddressLink","initialState","resultFound","NOT_VALID","defaultValidAddressHandler","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","isAddress","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","subject","newValue","zIndex","paddingRight","right","MarketPageHeader","background","useTheme","isDark","reHasUnicode","RegExp","test","GridPlaceholderItem","numItems","times","itemKey","AvatarImage","attrs","alt","borderColor","createCaseFirst","SearchBar","history","useHistory","push","nftsBaseUrl","MarketPageTitle","children","as","BaseSubMenu","SubMenuItems","StyledBannerImage","BannerHeader","bannerImage","bannerAlt","avatar","pb","BannerImage","bottom","left","useGetCollectionDistributionPB","getCollectionDistributionApi","apiResponse","fetchTokens","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","baseSlice","array","start","end","index","result","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","BackLink","RouterLink","primary","TopBar","to","LowestPriceStatBoxItem","lowestPrice","setLowestPrice","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","minimumFractionDigits","maximumFractionDigits","symbol","totalVolumeBNB","banner","useLocation","pathname","hash","volume","itemsConfig","href","large","activeItem","predicate","fromIndex","fromRight","baseIteratee","baseUniq","iteratee","baseIndexOf","comparator","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","includes","isCommon","seen","set","outer","computed","seenIndex","baseFindIndex","baseIsNaN","strictIndexOf"],"mappings":"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","file":"static/js/13.7587facf.chunk.js","sourcesContent":["var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","import { useState, useEffect } from 'react'\nimport {\n  getAllPancakeBunniesLowestPrice,\n  getAllPancakeBunniesRecentUpdatedAt,\n  getNftsFromCollectionApi,\n} from 'state/nftMarket/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from '../constants'\n\n// If collection is PancakeBunnies - gets all available bunnies, otherwise - null\nconst useAllPancakeBunnyNfts = (collectionAddress: string) => {\n  const [allPancakeBunnyNfts, setAllPancakeBunnyNfts] = useState<NftToken[]>(null)\n\n  const isPBCollection = collectionAddress === pancakeBunniesAddress\n\n  useEffect(() => {\n    const fetchPancakeBunnies = async () => {\n      // In order to not define special TS type just for PancakeBunnies display we're hacking a little bit into NftToken type.\n      // On this page we just want to display all bunnies with their lowest prices and updates on the market\n      // Since some bunnies might not be on the market at all, we don't refer to the redux nfts state (which stores NftToken with actual token ids)\n      // We merely request from API all available bunny ids with their metadata and query subgraph for lowest price and latest updates.\n      const { data } = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      const bunnyIds = Object.keys(data)\n      const lowestPrices = await getAllPancakeBunniesLowestPrice(bunnyIds)\n      const latestUpdates = await getAllPancakeBunniesRecentUpdatedAt(bunnyIds)\n      const allBunnies: NftToken[] = bunnyIds.map((bunnyId) => {\n        return {\n          // tokenId here is just a dummy one to satisfy TS. TokenID does not play any role in gird display below\n          tokenId: data[bunnyId].name,\n          name: data[bunnyId].name,\n          description: data[bunnyId].description,\n          collectionAddress: pancakeBunniesAddress,\n          collectionName: data[bunnyId].collection.name,\n          image: data[bunnyId].image,\n          attributes: [\n            {\n              traitType: 'bunnyId',\n              value: bunnyId,\n              displayType: null,\n            },\n          ],\n          meta: {\n            currentAskPrice: lowestPrices[bunnyId],\n            updatedAt: latestUpdates[bunnyId],\n          },\n        }\n      })\n      setAllPancakeBunnyNfts(allBunnies)\n    }\n    if (isPBCollection && !allPancakeBunnyNfts) {\n      fetchPancakeBunnies()\n    }\n  }, [isPBCollection, allPancakeBunnyNfts])\n\n  return allPancakeBunnyNfts\n}\n\nexport default useAllPancakeBunnyNfts\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","import React from 'react'\nimport { Grid } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport { Collection } from 'state/nftMarket/types'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport useAllPancakeBunnyNfts from '../../hooks/useAllPancakeBunnyNfts'\nimport GridPlaceholder from '../../components/GridPlaceholder'\n\ninterface CollectionNftsProps {\n  collection: Collection\n  sortBy?: string\n}\n\nconst PancakeBunniesCollectionNfts: React.FC<CollectionNftsProps> = ({ collection, sortBy = 'updatedAt' }) => {\n  const { address } = collection\n  const allPancakeBunnyNfts = useAllPancakeBunnyNfts(address)\n\n  const sortedNfts = allPancakeBunnyNfts\n    ? orderBy(allPancakeBunnyNfts, (nft) => (nft.meta[sortBy] ? Number(nft?.meta[sortBy]) : 0), [\n        sortBy === 'currentAskPrice' ? 'asc' : 'desc',\n      ])\n    : []\n\n  if (!sortedNfts.length) {\n    return <GridPlaceholder />\n  }\n\n  return (\n    <>\n      <Grid\n        gridGap=\"16px\"\n        gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n        alignItems=\"start\"\n      >\n        {sortedNfts.map((nft) => {\n          return <CollectibleLinkCard key={`${nft.tokenId}-${nft.collectionName}`} nft={nft} />\n        })}\n      </Grid>\n    </>\n  )\n}\n\nexport default PancakeBunniesCollectionNfts\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst FixedContainer = styled.div`\n  position: fixed;\n  right: 5%;\n  bottom: 110px;\n`\n\nconst ScrollToTopButton = () => {\n  const [visible, setVisible] = useState(false)\n  const { t } = useTranslation()\n\n  const toggleVisible = () => {\n    const scrolled = document.documentElement.scrollTop\n    if (scrolled > 700) {\n      setVisible(true)\n    } else if (scrolled <= 700) {\n      setVisible(false)\n    }\n  }\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 400,\n      behavior: 'auto',\n    })\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', toggleVisible)\n\n    return () => window.removeEventListener('scroll', toggleVisible)\n  }, [])\n\n  return (\n    <FixedContainer style={{ display: visible ? 'inline' : 'none' }}>\n      <Button variant=\"subtle\" endIcon={<ChevronUpIcon color=\"invertedContrast\" />} onClick={scrollToTop}>\n        {t('To Top')}\n      </Button>\n    </FixedContainer>\n  )\n}\n\nexport default ScrollToTopButton\n","import React from 'react'\nimport { Radio, Flex, Image, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport noop from 'lodash/noop'\nimport { formatNumber } from 'utils/formatBalance'\nimport { Item } from './types'\n\nconst StyledItemRow = styled(Flex)`\n  cursor: pointer;\n  user-select: none;\n`\n\nconst ItemImage = styled(Image)`\n  border-radius: 50%;\n`\n\ninterface ItemRowProps {\n  item: Item\n  isSelected: boolean\n  onSelect: () => void\n}\n\nexport const ItemRow: React.FC<ItemRowProps> = ({ item, isSelected, onSelect }) => (\n  <StyledItemRow alignItems=\"center\" px=\"16px\" py=\"8px\" onClick={onSelect}>\n    {item.image && <ItemImage src={item.image} height={48} width={48} mr=\"16px\" />}\n    <Text style={{ flex: 1 }}>{item.label}</Text>\n    {item.count !== undefined && (\n      <Text color=\"textSubtle\" px=\"8px\">\n        {formatNumber(item.count, 0, 0)}\n      </Text>\n    )}\n    <Radio name=\"item-select\" scale=\"sm\" checked={isSelected} value={item.label} onChange={noop} ml=\"24px\" />\n  </StyledItemRow>\n)\n\nexport const SearchWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 24px 24px 0 0;\n`\n\nexport const FilterButton = styled(Flex)`\n  align-items: center;\n  cursor: pointer;\n  user-select: none;\n\n  svg {\n    pointer-events: none;\n  }\n`\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  Box,\n  Button,\n  CloseIcon,\n  Flex,\n  IconButton,\n  InlineMenu,\n  Input,\n  InputGroup,\n  SearchIcon,\n  Text,\n} from '@pancakeswap/uikit'\nimport { FetchStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport orderBy from 'lodash/orderBy'\nimport React, { ChangeEvent, useEffect, useRef, useState } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useGetNftFilterLoadingState, useGetNftFilters } from 'state/nftMarket/hooks'\nimport { filterNftsFromCollection } from 'state/nftMarket/reducer'\nimport styled from 'styled-components'\nimport { FilterButton, ItemRow, SearchWrapper } from './styles'\nimport { Item } from './types'\n\ninterface ListFilterProps {\n  title?: string\n  traitType: string\n  items: Item[]\n  collectionAddress: string\n}\n\ninterface State {\n  orderKey: string\n  orderDir: 'asc' | 'desc'\n}\n\nconst TriggerButton = styled(Button)<{ hasItem: boolean }>`\n  ${({ hasItem }) =>\n    hasItem &&\n    `\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    padding-right: 8px;\n  `}\n`\n\nconst CloseButton = styled(IconButton)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`\n\nexport const ListFilter: React.FC<ListFilterProps> = ({ title, traitType, items, collectionAddress }) => {\n  const { t } = useTranslation()\n  const [isOpen, setIsOpen] = useState(false)\n  const [query, setQuery] = useState('')\n  const [orderState, setOrderState] = useState<State>({ orderKey: 'count', orderDir: 'asc' })\n  const wrapperRef = useRef(null)\n  const menuRef = useRef(null)\n  const nftFilters = useGetNftFilters(collectionAddress)\n  const nftFilterState = useGetNftFilterLoadingState(collectionAddress)\n  const dispatch = useAppDispatch()\n  const { orderKey, orderDir } = orderState\n\n  const traitFilter = nftFilters[traitType]\n  const isTraitSelected = !!traitFilter\n\n  const filteredItems =\n    query && query.length > 1\n      ? items.filter((item) => item.label.toLowerCase().indexOf(query.toLowerCase()) !== -1)\n      : items\n\n  const handleClearItem = () => {\n    const newFilters = { ...nftFilters }\n\n    delete newFilters[traitType]\n\n    dispatch(\n      filterNftsFromCollection({\n        collectionAddress,\n        nftFilters: newFilters,\n      }),\n    )\n  }\n\n  const handleMenuClick = () => setIsOpen(!isOpen)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.target\n    setQuery(value)\n  }\n\n  const handleItemSelect = ({ attr }: Item) => {\n    dispatch(\n      filterNftsFromCollection({\n        collectionAddress,\n        nftFilters: { ...nftFilters, [traitType]: attr },\n      }),\n    )\n  }\n\n  const toggleSort = (newOrderKey: string) => () => {\n    setOrderState((prevOrderDir) => {\n      if (prevOrderDir.orderKey !== newOrderKey) {\n        return {\n          orderKey: newOrderKey,\n          orderDir: 'asc',\n        }\n      }\n\n      return {\n        orderKey: newOrderKey,\n        orderDir: prevOrderDir.orderDir === 'asc' ? 'desc' : 'asc',\n      }\n    })\n  }\n\n  // @TODO Fix this in the Toolkit\n  // This is a fix to ensure the \"isOpen\" value is aligned with the menus's (to avoid a double click)\n  useEffect(() => {\n    const handleClickOutside = ({ target }: Event) => {\n      if (\n        wrapperRef.current &&\n        menuRef.current &&\n        !menuRef.current.contains(target) &&\n        !wrapperRef.current.contains(target)\n      ) {\n        setIsOpen(false)\n      }\n    }\n\n    document.addEventListener('click', handleClickOutside)\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [setIsOpen, wrapperRef, menuRef])\n\n  return (\n    <Flex alignItems=\"center\" mr=\"4px\" mb=\"4px\">\n      <Box ref={wrapperRef}>\n        <InlineMenu\n          component={\n            <TriggerButton\n              onClick={handleMenuClick}\n              variant={isTraitSelected ? 'subtle' : 'light'}\n              scale=\"sm\"\n              disabled={nftFilterState === FetchStatus.Fetching}\n              hasItem={isTraitSelected}\n            >\n              {title}\n            </TriggerButton>\n          }\n          isOpen={isOpen}\n          options={{ placement: 'bottom' }}\n        >\n          <Box maxWidth=\"375px\" ref={menuRef}>\n            <SearchWrapper alignItems=\"center\" p=\"16px\">\n              <InputGroup startIcon={<SearchIcon color=\"textSubtle\" />}>\n                <Input name=\"query\" placeholder={t('Search')} onChange={handleChange} value={query} />\n              </InputGroup>\n            </SearchWrapper>\n            <Flex alignItems=\"center\" p=\"16px\">\n              <FilterButton onClick={toggleSort('label')} style={{ flex: 1 }}>\n                <Text fontSize=\"12px\" color=\"secondary\" fontWeight=\"bold\" textTransform=\"uppercase\">\n                  {t('Name')}\n                </Text>\n                <Box width=\"18px\">\n                  {orderKey === 'label' && orderDir === 'asc' && <ArrowUpIcon width=\"18px\" color=\"secondary\" />}\n                  {orderKey === 'label' && orderDir === 'desc' && <ArrowDownIcon width=\"18px\" color=\"secondary\" />}\n                </Box>\n              </FilterButton>\n              <FilterButton onClick={toggleSort('count')}>\n                <Text fontSize=\"12px\" color=\"secondary\" fontWeight=\"bold\" textTransform=\"uppercase\">\n                  {t('Count')}\n                </Text>\n                <Box width=\"18px\">\n                  {orderKey === 'count' && orderDir === 'asc' && <ArrowUpIcon width=\"18px\" color=\"secondary\" />}\n                  {orderKey === 'count' && orderDir === 'desc' && <ArrowDownIcon width=\"18px\" color=\"secondary\" />}\n                </Box>\n              </FilterButton>\n            </Flex>\n            <Box height=\"240px\" overflowY=\"auto\">\n              {filteredItems.length > 0 ? (\n                orderBy(filteredItems, orderKey, orderDir).map((filteredItem) => {\n                  const handleSelect = () => handleItemSelect(filteredItem)\n                  const isItemSelected = traitFilter ? traitFilter.value === filteredItem.attr.value : false\n\n                  return (\n                    <ItemRow\n                      key={filteredItem.label}\n                      item={filteredItem}\n                      isSelected={isItemSelected}\n                      onSelect={handleSelect}\n                    />\n                  )\n                })\n              ) : (\n                <Flex alignItems=\"center\" justifyContent=\"center\" height=\"230px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    {t('No results found')}\n                  </Text>\n                </Flex>\n              )}\n            </Box>\n          </Box>\n        </InlineMenu>\n      </Box>\n      {isTraitSelected && (\n        <CloseButton\n          variant={isTraitSelected ? 'subtle' : 'light'}\n          scale=\"sm\"\n          onClick={handleClearItem}\n          disabled={nftFilterState === FetchStatus.Fetching}\n        >\n          <CloseIcon color=\"currentColor\" width=\"18px\" />\n        </CloseButton>\n      )}\n    </Flex>\n  )\n}\n","import React from 'react'\nimport { Button, ButtonProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { removeAllFilters } from 'state/nftMarket/reducer'\nimport { useGetNftFilterLoadingState } from 'state/nftMarket/hooks'\nimport { FetchStatus } from 'config/constants/types'\n\ninterface ClearAllButtonProps extends ButtonProps {\n  collectionAddress: string\n}\n\nconst ClearAllButton: React.FC<ClearAllButtonProps> = ({ collectionAddress, ...props }) => {\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n  const nftFilterState = useGetNftFilterLoadingState(collectionAddress)\n\n  const clearAll = () => {\n    dispatch(removeAllFilters(collectionAddress))\n  }\n\n  return (\n    <Button\n      key=\"clear-all\"\n      variant=\"text\"\n      scale=\"sm\"\n      onClick={clearAll}\n      disabled={nftFilterState === FetchStatus.Fetching}\n      {...props}\n    >\n      {t('Clear')}\n    </Button>\n  )\n}\n\nexport default ClearAllButton\n","import React from 'react'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { setOrdering } from 'state/nftMarket/reducer'\nimport { useGetNftOrdering } from 'state/nftMarket/hooks'\n\nconst SortSelect: React.FC<{ collectionAddress: string }> = ({ collectionAddress }) => {\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n  const selectedOrder = useGetNftOrdering(collectionAddress)\n  const handleChange = (newOption: OptionProps) => {\n    const { field, direction } = newOption.value\n    dispatch(setOrdering({ collection: collectionAddress, field, direction }))\n  }\n\n  const sortByItems = [\n    { label: t('Recently listed'), value: { field: 'updatedAt', direction: 'desc' } },\n    { label: t('Lowest price'), value: { field: 'currentAskPrice', direction: 'asc' } },\n    { label: t('Highest price'), value: { field: 'currentAskPrice', direction: 'desc' } },\n    { label: t('Token ID'), value: { field: 'tokenId', direction: 'asc' } },\n  ]\n\n  const defaultOptionIndex = sortByItems.findIndex(\n    (option) => option.value.field === selectedOrder.field && option.value.direction === selectedOrder.direction,\n  )\n\n  return (\n    <Select\n      options={sortByItems}\n      onOptionChange={handleChange}\n      defaultOptionIndex={defaultOptionIndex !== -1 ? defaultOptionIndex : undefined}\n    />\n  )\n}\n\nexport default SortSelect\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, ButtonMenu, ButtonMenuItem, Flex, Grid, Text } from '@pancakeswap/uikit'\nimport capitalize from 'lodash/capitalize'\nimport isEmpty from 'lodash/isEmpty'\nimport { useGetNftFilters, useGetNftShowOnlyOnSale } from 'state/nftMarket/hooks'\nimport { Collection, NftAttribute } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { Item, ListFilter } from 'views/Nft/market/components/Filters'\nimport { useAppDispatch } from 'state'\nimport { setShowOnlyOnSale } from 'state/nftMarket/reducer'\nimport useGetCollectionDistribution from '../../hooks/useGetCollectionDistribution'\nimport ClearAllButton from './ClearAllButton'\nimport SortSelect from './SortSelect'\n\ninterface FiltersProps {\n  collection: Collection\n}\n\nconst GridContainer = styled(Grid)`\n  margin-bottom: 16px;\n  padding: 0 16px;\n  grid-gap: 8px 16px;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas:\n    'filterByTitle .'\n    'attributeFilters attributeFilters'\n    '. sortByTitle'\n    'filterByControls sortByControls';\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas:\n      'filterByTitle . .'\n      'attributeFilters attributeFilters attributeFilters'\n      '. . sortByTitle'\n      'filterByControls . sortByControls';\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 2fr 5fr 1fr;\n    grid-template-areas:\n      'filterByTitle . .'\n      'filterByControls attributeFilters attributeFilters'\n      '. . sortByTitle'\n      '. . sortByControls';\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1.3fr 5fr 1fr;\n    grid-template-areas:\n      'filterByTitle . sortByTitle'\n      'filterByControls attributeFilters sortByControls';\n  }\n  ${({ theme }) => theme.mediaQueries.xxl} {\n    grid-template-columns: 1fr 5fr 1fr;\n  }\n`\n\nconst FilterByTitle = styled(Text)`\n  grid-area: filterByTitle;\n`\n\nconst FilterByControls = styled(Box)`\n  grid-area: filterByControls;\n`\n\nconst SortByTitle = styled(Text)`\n  grid-area: sortByTitle;\n`\n\nconst SortByControls = styled(Box)`\n  grid-area: sortByControls;\n`\n\nconst ScrollableFlexContainer = styled(Flex)`\n  grid-area: attributeFilters;\n  align-items: center;\n  flex: 1;\n  flex-wrap: nowrap;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-wrap: wrap;\n    overflow-x: revert;\n  }\n`\n\nconst Filters: React.FC<FiltersProps> = ({ collection }) => {\n  const { address } = collection\n  const dispatch = useAppDispatch()\n  const { data } = useGetCollectionDistribution(address)\n  const { t } = useTranslation()\n  const showOnlyNftsOnSale = useGetNftShowOnlyOnSale(address)\n  const [activeButtonIndex, setActiveButtonIndex] = useState(showOnlyNftsOnSale ? 1 : 0)\n\n  const onActiveButtonChange = (newIndex: number) => {\n    dispatch(setShowOnlyOnSale({ collection: address, showOnlyOnSale: newIndex === 1 }))\n    setActiveButtonIndex(newIndex)\n  }\n\n  const nftFilters = useGetNftFilters(address)\n  const attrsByType: Record<string, NftAttribute[]> = collection?.attributes?.reduce(\n    (accum, attr) => ({\n      ...accum,\n      [attr.traitType]: accum[attr.traitType] ? [...accum[attr.traitType], attr] : [attr],\n    }),\n    {},\n  )\n  const uniqueTraitTypes = attrsByType ? Object.keys(attrsByType) : []\n\n  return (\n    <GridContainer>\n      <FilterByTitle textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" bold>\n        {t('Filter by')}\n      </FilterByTitle>\n      <FilterByControls>\n        <ButtonMenu scale=\"sm\" activeIndex={activeButtonIndex} onItemClick={onActiveButtonChange}>\n          <ButtonMenuItem>{t('All')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('On Sale')}</ButtonMenuItem>\n        </ButtonMenu>\n      </FilterByControls>\n      <SortByTitle fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\n        {t('Sort By')}\n      </SortByTitle>\n      <SortByControls>\n        <SortSelect collectionAddress={address} />\n      </SortByControls>\n      <ScrollableFlexContainer>\n        {uniqueTraitTypes.map((traitType) => {\n          const attrs = attrsByType[traitType]\n          const items: Item[] = attrs.map((attr) => ({\n            label: capitalize(attr.value as string),\n            count: data && data[traitType] ? data[traitType][attr.value] : undefined,\n            attr,\n          }))\n\n          return (\n            <ListFilter\n              key={traitType}\n              title={capitalize(traitType)}\n              traitType={traitType}\n              items={items}\n              collectionAddress={address}\n            />\n          )\n        })}\n        {!isEmpty(nftFilters) && <ClearAllButton collectionAddress={address} mb=\"4px\" />}\n      </ScrollableFlexContainer>\n    </GridContainer>\n  )\n}\n\nexport default Filters\n","export const REQUEST_SIZE = 100\n","import React, { useEffect, useState } from 'react'\nimport uniqBy from 'lodash/uniqBy'\nimport { AutoRenewIcon, Button, Flex, Grid, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport {\n  useGetNftFilterLoadingState,\n  useGetNftOrdering,\n  useGetNftShowOnlyOnSale,\n  useNftsFromCollection,\n} from 'state/nftMarket/hooks'\nimport { Collection, NftToken, TokenMarketData } from 'state/nftMarket/types'\nimport { fetchNftsFromCollections } from 'state/nftMarket/reducer'\nimport { getNftApi, getNftsMarketData } from 'state/nftMarket/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { FetchStatus } from 'config/constants/types'\nimport GridPlaceholder from '../../components/GridPlaceholder'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport { REQUEST_SIZE } from '../config'\n\ninterface CollectionNftsProps {\n  collection: Collection\n}\n\nconst CollectionNfts: React.FC<CollectionNftsProps> = ({ collection }) => {\n  const { totalSupply, numberTokensListed, address: collectionAddress } = collection\n  const [page, setPage] = useState(1)\n  const [skip, setSkip] = useState(0)\n  const [nfts, setNfts] = useState<NftToken[]>([])\n  const [isFetchingFilteredNfts, setIsFetchingFilteredNfts] = useState(false)\n  const { t } = useTranslation()\n  const collectionNfts = useNftsFromCollection(collectionAddress)\n  const nftFilterLoadingState = useGetNftFilterLoadingState(collectionAddress)\n  const dispatch = useAppDispatch()\n\n  const showOnlyNftsOnSale = useGetNftShowOnlyOnSale(collectionAddress)\n  const { field: orderField, direction: orderDirection } = useGetNftOrdering(collectionAddress)\n  const isFetching = orderField === 'tokenId' ? nftFilterLoadingState === FetchStatus.Fetching : isFetchingFilteredNfts\n\n  const handleLoadMore = () => {\n    if (orderField === 'tokenId') {\n      setPage((prevPage) => prevPage + 1)\n    }\n    setSkip(skip + REQUEST_SIZE)\n  }\n\n  useEffect(() => {\n    if (orderField === 'tokenId') {\n      setPage(1)\n    }\n  }, [orderField])\n\n  useEffect(() => {\n    setNfts([])\n    setSkip(0)\n  }, [orderField, orderDirection])\n\n  useEffect(() => {\n    const fetchApiData = async (marketData: TokenMarketData[]) => {\n      const apiRequestPromises = marketData.map((marketNft) => getNftApi(collectionAddress, marketNft.tokenId))\n      const apiResponses = await Promise.all(apiRequestPromises)\n      const responsesWithMarketData = apiResponses.map((apiNft, i) => {\n        return {\n          ...apiNft,\n          collectionAddress,\n          collectionName: apiNft.collection.name,\n          marketData: marketData[i],\n        }\n      })\n      setIsFetchingFilteredNfts(false)\n      setNfts((prevState) => {\n        const combinedNfts = [...prevState, ...responsesWithMarketData]\n        return uniqBy(combinedNfts, 'tokenId')\n      })\n    }\n\n    const fetchMarketData = async () => {\n      const subgraphRes = await getNftsMarketData(\n        { collection: collectionAddress.toLowerCase(), isTradable: true },\n        REQUEST_SIZE,\n        orderField,\n        orderDirection,\n        skip,\n      )\n      fetchApiData(subgraphRes)\n    }\n\n    if (orderField !== 'tokenId') {\n      // Query by tokenId is handled in useEffect below since we in this case\n      // we need to show all NFTs, even those that never been on sale (i.e. they are not in subgraph)\n      setIsFetchingFilteredNfts(true)\n      fetchMarketData()\n    }\n  }, [orderField, orderDirection, skip, collectionAddress])\n\n  useEffect(() => {\n    if (orderField === 'tokenId') {\n      dispatch(\n        fetchNftsFromCollections({\n          collectionAddress,\n          page,\n          size: REQUEST_SIZE,\n        }),\n      )\n    }\n  }, [page, collectionAddress, dispatch, orderField])\n\n  const nftsToShow =\n    orderField === 'tokenId'\n      ? collectionNfts?.filter((nft) => {\n          if (showOnlyNftsOnSale) {\n            return nft.marketData?.isTradable\n          }\n          return true\n        })\n      : nfts\n\n  if (!nftsToShow || nftsToShow?.length === 0) {\n    return <GridPlaceholder />\n  }\n\n  const isNotLastPage =\n    showOnlyNftsOnSale || orderField !== 'tokenId'\n      ? nftsToShow?.length < Number(numberTokensListed)\n      : nftsToShow?.length < Number(totalSupply)\n\n  const resultsAmount = showOnlyNftsOnSale || orderField !== 'tokenId' ? numberTokensListed : totalSupply\n\n  return (\n    <>\n      <Flex p=\"16px\">\n        <Text bold>\n          {resultsAmount} {t('Results')}\n        </Text>\n      </Flex>\n      <Grid\n        gridGap=\"16px\"\n        gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n        alignItems=\"start\"\n      >\n        {nftsToShow.map((nft) => {\n          const currentAskPriceAsNumber = nft.marketData && parseFloat(nft.marketData.currentAskPrice)\n\n          return (\n            <CollectibleLinkCard\n              key={nft.tokenId}\n              nft={nft}\n              currentAskPrice={currentAskPriceAsNumber > 0 ? currentAskPriceAsNumber : undefined}\n            />\n          )\n        })}\n      </Grid>\n      <Flex mt=\"60px\" mb=\"12px\" justifyContent=\"center\">\n        {isNotLastPage && (\n          <Button\n            onClick={handleLoadMore}\n            scale=\"sm\"\n            endIcon={isFetching ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {isFetching ? t('Loading') : t('Load more')}\n          </Button>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default CollectionNfts\n","import React, { useState } from 'react'\nimport orderBy from 'lodash/orderBy'\nimport { BunnyPlaceholderIcon, Button, Flex, Grid, Text } from '@pancakeswap/uikit'\nimport {\n  useGetNftFilterLoadingState,\n  useGetNftOrdering,\n  useGetNftShowOnlyOnSale,\n  useNftsFromCollection,\n} from 'state/nftMarket/hooks'\nimport { Collection } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { FetchStatus } from 'config/constants/types'\nimport GridPlaceholder from '../../components/GridPlaceholder'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport { REQUEST_SIZE } from '../config'\n\ninterface FilteredCollectionNftsProps {\n  collection: Collection\n}\n\nconst FilteredCollectionNfts: React.FC<FilteredCollectionNftsProps> = ({ collection }) => {\n  const { address: collectionAddress } = collection\n  const [numToShow, setNumToShow] = useState(REQUEST_SIZE)\n  const { t } = useTranslation()\n  const selectedOrder = useGetNftOrdering(collectionAddress)\n  const showOnlyNftsOnSale = useGetNftShowOnlyOnSale(collectionAddress)\n  const collectionNfts = useNftsFromCollection(collectionAddress)\n  const nftFilterLoadingState = useGetNftFilterLoadingState(collectionAddress)\n\n  const handleLoadMore = () => {\n    setNumToShow((prevNumToShow) => prevNumToShow + REQUEST_SIZE)\n  }\n\n  if (nftFilterLoadingState === FetchStatus.Fetching) {\n    return <GridPlaceholder />\n  }\n\n  const orderedNfts = collectionNfts\n    ? orderBy(\n        collectionNfts,\n        (nft) => {\n          if (selectedOrder.field === 'currentAskPrice') {\n            const currentAskPriceAsNumber = nft.marketData?.currentAskPrice\n              ? parseFloat(nft.marketData?.currentAskPrice)\n              : 0\n            if (currentAskPriceAsNumber > 0) {\n              return parseFloat(nft.marketData.currentAskPrice)\n            }\n            return selectedOrder.direction === 'asc' ? Infinity : -Infinity\n          }\n          if (selectedOrder.field === 'tokenId') {\n            const tokenIdNumber = Number(nft.tokenId)\n            return Number.isFinite(tokenIdNumber) ? tokenIdNumber : 0\n          }\n          // recently listed sorting\n          return nft.marketData ? parseInt(nft.marketData[selectedOrder.field], 10) : 0\n        },\n        selectedOrder.direction,\n      )\n    : []\n\n  const filteredNfts = showOnlyNftsOnSale ? orderedNfts.filter((nft) => nft.marketData?.isTradable) : orderedNfts\n\n  const nftsToShow = filteredNfts.slice(0, numToShow)\n\n  return (\n    <>\n      <Flex p=\"16px\">\n        <Text bold>\n          {filteredNfts.length} {t('Results')}\n        </Text>\n      </Flex>\n      {nftsToShow.length > 0 ? (\n        <>\n          <Grid\n            gridGap=\"16px\"\n            gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n            alignItems=\"start\"\n          >\n            {nftsToShow.map((nft) => {\n              const currentAskPriceAsNumber = nft.marketData && parseFloat(nft.marketData.currentAskPrice)\n\n              return (\n                <CollectibleLinkCard\n                  key={nft.tokenId}\n                  nft={nft}\n                  currentAskPrice={currentAskPriceAsNumber > 0 ? currentAskPriceAsNumber : undefined}\n                />\n              )\n            })}\n          </Grid>\n          <Flex mt=\"60px\" mb=\"12px\" justifyContent=\"center\">\n            {collectionNfts.length > numToShow && (\n              <Button onClick={handleLoadMore} scale=\"sm\">\n                {t('Load more')}\n              </Button>\n            )}\n          </Flex>\n        </>\n      ) : (\n        <Flex alignItems=\"center\" py=\"48px\" flexDirection=\"column\">\n          <BunnyPlaceholderIcon width=\"96px\" mb=\"24px\" />\n          <Text fontWeight={600}>{t('No NFTs found')}</Text>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default FilteredCollectionNfts\n","import React from 'react'\nimport { createPortal } from 'react-dom'\nimport { Box } from '@pancakeswap/uikit'\nimport isEmpty from 'lodash/isEmpty'\nimport { Collection } from 'state/nftMarket/types'\nimport { useGetNftFilters } from 'state/nftMarket/hooks'\nimport Container from 'components/Layout/Container'\nimport ScrollButton from 'components/ScrollToTopButton'\nimport Filters from './Filters'\nimport CollectionNfts from './CollectionNfts'\nimport FilteredCollectionNfts from './FilteredCollectionNfts'\n\ninterface CollectionWrapperProps {\n  collection: Collection\n}\n\nconst CollectionWrapper: React.FC<CollectionWrapperProps> = ({ collection }) => {\n  const nftFilters = useGetNftFilters(collection.address)\n\n  return (\n    <Box py=\"32px\">\n      <Container px={[0, null, '24px']}>\n        <Filters collection={collection} />\n      </Container>\n      <Container>\n        {isEmpty(nftFilters) ? (\n          <CollectionNfts collection={collection} />\n        ) : (\n          <FilteredCollectionNfts collection={collection} />\n        )}\n      </Container>\n      {createPortal(<ScrollButton />, document.body)}\n    </Box>\n  )\n}\n\nexport default CollectionWrapper\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport { Box, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { fetchCollection } from 'state/nftMarket/reducer'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Container from 'components/Layout/Container'\nimport { pancakeBunniesAddress } from '../../constants'\nimport PancakeBunniesCollectionNfts from './PancakeBunniesCollectionNfts'\nimport Header from '../Header'\nimport CollectionWrapper from './CollectionWrapper'\n\nconst Items = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const [sortBy, setSortBy] = useState('updatedAt')\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const collection = useGetCollection(collectionAddress)\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  const { address } = collection || {}\n\n  const sortByItems = [\n    { label: t('Recently listed'), value: 'updatedAt' },\n    { label: t('Lowest price'), value: 'currentAskPrice' },\n  ]\n\n  const handleChange = (newOption: OptionProps) => {\n    setSortBy(newOption.value)\n  }\n\n  useEffect(() => {\n    if (address) {\n      dispatch(fetchCollection(address))\n    }\n  }, [address, dispatch])\n\n  return (\n    <>\n      <Header collection={collection} />\n      {isPBCollection ? (\n        <Container mb=\"24px\">\n          <Flex alignItems=\"center\" justifyContent={['flex-start', null, null, 'flex-end']} mb=\"24px\">\n            <Box minWidth=\"165px\">\n              <Text fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\n                {t('Sort By')}\n              </Text>\n              <Select options={sortByItems} onOptionChange={handleChange} />\n            </Box>\n          </Flex>\n          <PancakeBunniesCollectionNfts collection={collection} sortBy={sortBy} />\n        </Container>\n      ) : (\n        <CollectionWrapper collection={collection} />\n      )}\n    </>\n  )\n}\n\nexport default Items\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import React from 'react'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\nimport useTheme from 'hooks/useTheme'\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  const { theme } = useTheme()\n  const background = theme.isDark\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\n  return <PageHeader background={background} {...props} />\n}\n\nexport default MarketPageHeader\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","import React from 'react'\nimport { Box, BoxProps, Grid, GridProps, Skeleton } from '@pancakeswap/uikit'\nimport times from 'lodash/times'\n\ninterface GridPlaceholderProps extends GridProps {\n  numItems?: number\n}\n\nexport const GridPlaceholderItem: React.FC<BoxProps> = (props) => (\n  <Box {...props}>\n    <Skeleton height=\"258px\" mb=\"8px\" />\n    <Skeleton width=\"30%\" mb=\"4px\" />\n    <Skeleton width=\"45%\" mb=\"16px\" />\n    <Skeleton />\n  </Box>\n)\n\nconst GridPlaceholder: React.FC<GridPlaceholderProps> = ({ numItems = 12, ...props }) => (\n  <Grid gridGap=\"16px\" gridTemplateColumns={['1fr', null, null, 'repeat(4, 1fr)']} {...props}>\n    {times(numItems).map((itemKey) => (\n      <GridPlaceholderItem key={itemKey} />\n    ))}\n  </Grid>\n)\n\nexport default GridPlaceholder\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n","import { useEffect, useState } from 'react'\nimport { getCollectionDistributionApi } from 'state/nftMarket/helpers'\nimport { ApiCollectionDistribution, ApiCollectionDistributionPB } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from '../constants'\n\ninterface State {\n  isFetching: boolean\n  data: ApiCollectionDistribution['data']\n}\n\nconst useGetCollectionDistribution = (collectionAddress: string) => {\n  const [state, setState] = useState<State>({ isFetching: false, data: null })\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      setState((prevState) => ({ ...prevState, isFetching: true }))\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistribution>(collectionAddress)\n      setState({\n        isFetching: false,\n        data: apiResponse.data,\n      })\n    }\n\n    fetchTokens()\n  }, [collectionAddress, setState])\n\n  return state\n}\n\ninterface StatePB {\n  isFetching: boolean\n  data: ApiCollectionDistributionPB['data']\n}\n\nexport const useGetCollectionDistributionPB = () => {\n  const [state, setState] = useState<StatePB>({ isFetching: false, data: null })\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      setState((prevState) => ({ ...prevState, isFetching: true }))\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistributionPB>(pancakeBunniesAddress)\n      setState({\n        isFetching: false,\n        data: apiResponse.data,\n      })\n    }\n\n    fetchTokens()\n  }, [setState])\n\n  return state\n}\n\nexport default useGetCollectionDistribution\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={`${nftsBaseUrl}/collections`}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = totalVolumeBNB\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })\n    : '0'\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n    {\n      label: t('Activity'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#activity`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem\n              title={t('Items listed')}\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\n            />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || '#items'}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n"],"sourceRoot":""}