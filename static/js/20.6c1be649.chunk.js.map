{"version":3,"sources":["views/Voting/helpers.ts","views/Voting/config.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","views/Voting/components/DatePicker/DatePicker.tsx","views/Voting/components/DatePicker/DatePickerPortal.tsx","views/Voting/components/DatePicker/TimePicker.tsx","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx"],"names":["isCoreProposal","proposal","ADMINS","includes","author","toLowerCase","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","name","params","symbol","address","tokens","cake","decimals","generatePayloadData","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","sendSnapshotData","message","a","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","block","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","power","parseFloat","metadata","votingPower","PROPOSALS_TO_SHOW","map","IPFS_GATEWAY","VOTE_THRESHOLD","VotingBox","styled","div","theme","colors","cardBorder","ModalInner","props","mb","maxWidth","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","ifoPoolBalance","t","useTranslation","as","fontSize","color","textTransform","bold","formatNumber","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","isActive","useWeb3React","useState","setVotingPower","isLoading","setIsLoading","useEffect","getActivePools","eligiblePools","contractAddress","getAddress","IFOPoolBalance","prevVotingPower","fetchVotingPower","Table","table","text","TableBox","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","children","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","background","input","primary","primaryBright","secondary","DatePickerPortal","id","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","BaseLabel","label","Label","SecondaryLabel","FormError","FormErrors","errors","mt","Choice","onRemove","onTextInput","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","value","currentTarget","length","right","top","zIndex","variant","onClick","makeChoice","uniqueId","Choices","hasMinimumChoices","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","onDismiss","modalIsOpen","setModalIsOpen","useTheme","title","headerBackground","gradients","cardHeader","width","height","size","EasyMde","lazy","CreateProposal","times","startDate","startTime","endDate","endTime","snapshot","setState","fieldsState","setFieldsState","initialBlock","useInitialBlock","push","useHistory","useWeb3Provider","library","connector","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","isArray","startDateTimestamp","getFormErrors","handleSubmit","preventDefault","SnapshotCommand","PROPOSAL","payload","start","end","signMessage","sig","msg","ipfsHash","console","updateValue","key","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","Container","py","Page","to","onSubmit","htmlFor","inputName","required","onTextChange","px","selected","placeholderText","mr","href","getBscScanLink","truncateHash","endIcon","spin","isEmpty","count","ConnectWalletButton"],"mappings":"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","file":"static/js/20.6c1be649.chunk.js","sourcesContent":["import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport tokens from 'config/constants/tokens'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return ADMINS.includes(proposal.author.toLowerCase())\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: tokens.cake.address, decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnapshotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    let power = parseFloat(vote.metadata?.votingPower)\n\n    if (!power) {\n      power = 0\n    }\n\n    return accum + power\n  }, 0)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMINS = [\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\n].map((address) => address.toLowerCase())\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANCAKE_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Text, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatNumber } from 'utils/formatBalance'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: number\n  cakeBalance: number\n  cakeVaultBalance: number\n  cakePoolBalance: number\n  poolsBalance: number\n  cakeBnbLpBalance: number\n  ifoPoolBalance: number\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n  ifoPoolBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {formatNumber(total, 0, 3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakePoolBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeVaultBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('IFO Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(ifoPoolBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other Syrup Pools')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(poolsBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('CAKE BNB LP')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeBnbLpBalance, 0, 3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: number\n  cakeVaultBalance: number\n  cakePoolBalance: number\n  poolsBalance: number\n  cakeBnbLpBalance: number\n  ifoPoolBalance: number\n  total: number\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: 0,\n  cakeVaultBalance: 0,\n  cakePoolBalance: 0,\n  poolsBalance: 0,\n  cakeBnbLpBalance: 0,\n  ifoPoolBalance: 0,\n  total: 0,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          cakeVaultBalance,\n          verificationHash,\n          IFOPoolBalance,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: parseFloat(cakeBalance),\n            cakeBnbLpBalance: parseFloat(cakeBnbLpBalance),\n            cakePoolBalance: parseFloat(cakePoolBalance),\n            poolsBalance: parseFloat(poolsBalance),\n            cakeVaultBalance: parseFloat(cakeVaultBalance),\n            ifoPoolBalance: IFOPoolBalance ? parseFloat(IFOPoolBalance) : 0,\n            total: parseFloat(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\nconst TableBox = styled.div`\n  width: 100%;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst AStyle = styled.a`\n  word-break: break-all;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    return <Text as=\"p\" my=\"16px\" {...props} />\n  },\n  table: ({ ...props }) => {\n    return (\n      <TableBox>\n        <Table>{props.children}</Table>\n      </TableBox>\n    )\n  },\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n  a: AStyle,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React from 'react'\nimport { Box, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseLabel = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-weight: 600;\n  margin-bottom: 8px;\n`\n\nexport const Label = styled(BaseLabel)`\n  font-size: 20px;\n`\n\nexport const SecondaryLabel = styled(BaseLabel)`\n  font-size: 12px;\n  text-transform: uppercase;\n`\n\nexport const FormError: React.FC = ({ children }) => (\n  <Text color=\"failure\" mb=\"4px\">\n    {children}\n  </Text>\n)\n\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\n  return (\n    <Box mt=\"8px\">\n      {errors.map((error) => {\n        return <FormError key={error}>{error}</FormError>\n      })}\n    </Box>\n  )\n}\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\n\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\n  onTextInput: (value: string) => void\n  onRemove?: () => void\n}\n\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\n  const [isWarning, setIsWarning] = useState(false)\n  const [isDirty, setIsDirty] = useState(false)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget\n\n    setIsWarning(isDirty && value.length === 0)\n    setIsDirty(true)\n    onTextInput(value)\n  }\n\n  return (\n    <Box position=\"relative\" mb=\"16px\">\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\n      {onRemove && (\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\n          <IconButton variant=\"text\" onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Choice\n","import React from 'react'\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n","import { ContextApi } from 'contexts/Localization/types'\nimport { format, parseISO, isValid } from 'date-fns'\nimport { MINIMUM_CHOICES } from './Choices'\nimport { FormState } from './types'\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  if (!isValid(date) || !isValid(time)) {\n    return null\n  }\n\n  const dateStr = format(date, 'yyyy-MM-dd')\n  const timeStr = format(time, 'HH:mm:ss')\n\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\n}\n\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\n  const errors: { [key: string]: string[] } = {}\n\n  if (!name) {\n    errors.name = [t('%field% is required', { field: 'Title' })]\n  }\n\n  if (!body) {\n    errors.body = [t('%field% is required', { field: 'Body' })]\n  }\n\n  if (choices.length < MINIMUM_CHOICES) {\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\n  }\n\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\n    errors.choices = Array.isArray(errors.choices)\n      ? [...errors.choices, t('Choices must not be empty')]\n      : (errors.choices = [t('Choices must not be empty')])\n  }\n\n  if (!isValid(startDate)) {\n    errors.startDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(startTime)) {\n    errors.startTime = [t('Please select a valid time')]\n  }\n\n  if (!isValid(endDate)) {\n    errors.endDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(endTime)) {\n    errors.endTime = [t('Please select a valid time')]\n  }\n\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\n\n  if (endDateTimestamp < startDateTimestamp) {\n    errors.endDate = Array.isArray(errors.endDate)\n      ? [...errors.endDate, t('End date must be after the start date')]\n      : (errors.endDate = [t('End date must be after the start date')])\n  }\n\n  if (snapshot === 0) {\n    errors.snapshot = [t('Invalid snapshot')]\n  }\n\n  return errors\n}\n","import React, { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    ifoPoolBalance,\n  } = useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              cakeVaultBalance={cakeVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              ifoPoolBalance={ifoPoolBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\nimport {\n  AutoRenewIcon,\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Input,\n  LinkExternal,\n  Text,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useHistory } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport isEmpty from 'lodash/isEmpty'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { SnapshotCommand } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { signMessage } from 'utils/web3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { DatePicker, TimePicker, DatePickerPortal } from 'views/Voting/components/DatePicker'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport { PageMeta } from 'components/Layout/Page'\nimport { sendSnapshotData, Message, generateMetaData, generatePayloadData } from '../helpers'\nimport Layout from '../components/Layout'\nimport { FormErrors, Label, SecondaryLabel } from './styles'\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\nimport { combineDateAndTime, getFormErrors } from './helpers'\nimport { FormState } from './types'\nimport { ADMINS, VOTE_THRESHOLD } from '../config'\nimport VoteDetailsModal from '../components/VoteDetailsModal'\n\nconst EasyMde = lazy(() => import('components/EasyMde'))\n\nconst CreateProposal = () => {\n  const [state, setState] = useState<FormState>({\n    name: '',\n    body: '',\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n    snapshot: 0,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const initialBlock = useInitialBlock()\n  const { push } = useHistory()\n  const { library, connector } = useWeb3Provider()\n  const { toastSuccess, toastError } = useToast()\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\n  const formErrors = getFormErrors(state, t)\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n\n    try {\n      setIsLoading(true)\n      const proposal = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.PROPOSAL,\n        payload: {\n          name,\n          body,\n          snapshot,\n          start: combineDateAndTime(startDate, startTime),\n          end: combineDateAndTime(endDate, endTime),\n          choices: choices\n            .filter((choice) => choice.value)\n            .map((choice) => {\n              return choice.value\n            }),\n          metadata: generateMetaData(),\n          type: 'single-choice',\n        },\n      })\n\n      const sig = await signMessage(connector, library, account, proposal)\n\n      if (sig) {\n        const msg: Message = { address: account, msg: proposal, sig }\n\n        // Save proposal to snapshot\n        const data = await sendSnapshotData(msg)\n\n        // Redirect user to newly created proposal page\n        push(`/voting/proposal/${data.ipfsHash}`)\n\n        toastSuccess(t('Proposal created!'))\n      } else {\n        toastError(t('Error'), t('Unable to sign payload'))\n      }\n    } catch (error) {\n      toastError(t('Error'), (error as Error)?.message)\n      console.error(error)\n      setIsLoading(false)\n    }\n  }\n\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }))\n\n    // Keep track of what fields the user has attempted to edit\n    setFieldsState((prevFieldsState) => ({\n      ...prevFieldsState,\n      [key]: true,\n    }))\n  }\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name: inputName, value } = evt.currentTarget\n    updateValue(inputName, value)\n  }\n\n  const handleEasyMdeChange = (value: string) => {\n    updateValue('body', value)\n  }\n\n  const handleChoiceChange = (newChoices: Choice[]) => {\n    updateValue('choices', newChoices)\n  }\n\n  const handleDateChange = (key: string) => (value: Date) => {\n    updateValue(key, value)\n  }\n\n  const options = useMemo(() => {\n    return {\n      hideIcons:\n        account && ADMINS.includes(account.toLowerCase())\n          ? []\n          : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\n    }\n  }, [account])\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      setState((prevState) => ({\n        ...prevState,\n        snapshot: initialBlock,\n      }))\n    }\n  }, [initialBlock, setState])\n\n  return (\n    <Container py=\"40px\">\n      <PageMeta />\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <Link to=\"/\">{t('Home')}</Link>\n          <Link to=\"/voting\">{t('Voting')}</Link>\n          <Text>{t('Make a Proposal')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <Layout>\n          <Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"name\">{t('Title')}</Label>\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\n            </Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"body\">{t('Content')}</Label>\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t('Tip: write in Markdown!')}\n              </Text>\n              <EasyMde\n                id=\"body\"\n                name=\"body\"\n                onTextChange={handleEasyMdeChange}\n                value={body}\n                options={options}\n                required\n              />\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\n            </Box>\n            {body && (\n              <Box mb=\"24px\">\n                <Card>\n                  <CardHeader>\n                    <Heading as=\"h3\" scale=\"md\">\n                      {t('Preview')}\n                    </Heading>\n                  </CardHeader>\n                  <CardBody p=\"0\" px=\"24px\">\n                    <ReactMarkdown>{body}</ReactMarkdown>\n                  </CardBody>\n                </Card>\n              </Box>\n            )}\n            <Choices choices={choices} onChange={handleChoiceChange} />\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\n          </Box>\n          <Box>\n            <Card>\n              <CardHeader>\n                <Heading as=\"h3\" scale=\"md\">\n                  {t('Actions')}\n                </Heading>\n              </CardHeader>\n              <CardBody>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"startDate\"\n                    onChange={handleDateChange('startDate')}\n                    selected={startDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"startTime\"\n                    onChange={handleDateChange('startTime')}\n                    selected={startTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"endDate\"\n                    onChange={handleDateChange('endDate')}\n                    selected={endDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"endTime\"\n                    onChange={handleDateChange('endTime')}\n                    selected={endTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\n                </Box>\n                {account && (\n                  <Flex alignItems=\"center\" mb=\"8px\">\n                    <Text color=\"textSubtle\" mr=\"16px\">\n                      {t('Creator')}\n                    </Text>\n                    <LinkExternal href={getBscScanLink(account, 'address')}>{truncateHash(account)}</LinkExternal>\n                  </Flex>\n                )}\n                <Flex alignItems=\"center\" mb=\"16px\">\n                  <Text color=\"textSubtle\" mr=\"16px\">\n                    {t('Snapshot')}\n                  </Text>\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\n                </Flex>\n                {account ? (\n                  <>\n                    <Button\n                      type=\"submit\"\n                      width=\"100%\"\n                      isLoading={isLoading}\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                      disabled={!isEmpty(formErrors)}\n                      mb=\"16px\"\n                    >\n                      {t('Publish')}\n                    </Button>\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\n                    </Text>\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\n                      {t('Check voting power')}\n                    </Button>\n                  </>\n                ) : (\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\n                )}\n              </CardBody>\n            </Card>\n          </Box>\n        </Layout>\n      </form>\n      <DatePickerPortal />\n    </Container>\n  )\n}\n\nexport default CreateProposal\n"],"sourceRoot":""}