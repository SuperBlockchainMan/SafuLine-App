{"version":3,"sources":["views/Info/components/InfoCharts/ChartCard/index.tsx","views/Info/components/SaveIcon/index.tsx","views/Info/components/InfoSearch/index.tsx","views/Info/components/InfoNav/index.tsx","views/Info/components/InfoCharts/LineChart/index.tsx","views/Info/components/InfoTables/TokensTable.tsx","views/Info/components/InfoTables/PoolsTable.tsx","views/Info/components/InfoCharts/BarChart/index.tsx","views/Info/components/InfoTables/TransactionsTable.tsx","views/Info/Overview/index.tsx","views/Info/Pools/index.tsx","views/Info/components/InfoCharts/CandleChart/index.tsx","views/Info/Pools/PoolPage.tsx","views/Info/components/TopTokenMovers/index.tsx","views/Info/Tokens/index.tsx","views/Info/hooks/useCMCLink.ts","views/Info/Tokens/TokenPage.tsx","views/Info/Tokens/redirects.tsx","views/Info/index.tsx","components/TabToggle/index.tsx"],"names":["ChartView","HoverIcon","styled","div","SaveIcon","fill","rest","theme","useTheme","stroke","colors","warning","color","textDisabled","Container","StyledInput","Input","inputSecondary","Menu","background","hide","secondary","mediaQueries","sm","md","Blackout","ResponsiveGrid","Break","cardBorder","HoverText","HoverRowLink","OptionButton","enabled","primary","card","tokenIncludesSearchTerm","token","value","address","toLowerCase","includes","symbol","name","Search","history","useHistory","useMatchBreakpoints","isXs","isSm","t","useTranslation","inputRef","useRef","menuRef","showMoreRef","useState","showMenu","setShowMenu","setValue","debouncedSearchTerm","useDebounce","useFetchSearchResults","tokens","pools","tokensLoading","poolsLoading","error","tokensShown","setTokensShown","poolsShown","setPoolsShown","useEffect","handleOutsideClick","e","menuClick","current","contains","target","inputCLick","showMoreClick","document","addEventListener","querySelector","style","overflow","removeEventListener","useWatchlistTokens","savedTokens","addSavedToken","useWatchlistPools","savedPools","addSavedPool","handleItemClick","to","push","watchListTokenData","useTokenDatas","watchListTokenLoading","length","watchListPoolData","usePoolDatas","watchListPoolLoading","showWatchlist","setShowWatchlist","tokensForList","useMemo","filter","sort","t0","t1","volumeUSD","poolForList","pool","token0","token1","poolIncludesSearchTerm","p0","p1","type","onChange","placeholder","ref","onFocus","mb","onClick","bold","textAlign","fontSize","slice","map","i","CurrencyLogo","ml","id","marginLeft","stopPropagation","formatAmount","priceUSD","liquidityUSD","isLoading","noTokensFound","MINIMUM_SEARCH_CHARACTERS","noWatchlistTokens","showMessage","noTokensMessage","contentUnderTokenList","p","address0","address1","whiteSpace","volumeUSDWeek","noPoolsFound","noWatchlistPools","noPoolsMessage","contentUnderPoolList","NavWrapper","Flex","gradients","cardHeader","InfoNav","activeIndex","useRouteMatch","scale","variant","as","Link","width","HoverUpdater","locale","payload","setHoverValue","setHoverDate","time","toLocaleString","year","day","month","LineChart","data","currentLanguage","ResponsiveContainer","AreaChart","height","margin","top","right","left","bottom","onMouseLeave","undefined","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","axisLine","tickLine","tickFormatter","toLocaleDateString","minTickGap","YAxis","tickCount","val","orientation","tick","dx","textSubtle","Tooltip","cursor","contentStyle","display","formatter","tooltipValue","props","Area","strokeWidth","LinkWrapper","ResponsiveLogo","TableLoader","loadingRow","DataRow","tokenData","index","alignItems","fontWeight","notation","Percent","priceUSDChange","SORT_FIELD","TokenTable","tokenDatas","maxItems","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","extraPages","Math","floor","sortedTokens","a","b","handleSort","useCallback","newField","arrow","field","textTransform","Fragment","LoadingRow","poolData","lpFees24h","lpApr7d","PoolTable","poolDatas","loading","ITEMS_PER_INFO_TABLE_PAGE","sortedPools","CustomBar","x","y","rx","Chart","BarChart","backgroundDisabled","Bar","shape","Wrapper","RadioGroup","transaction","abs0","abs","amountToken0","abs1","amountToken1","outputTokenSymbol","token0Symbol","token1Symbol","inputTokenSymbol","href","getBscScanLink","hash","TransactionType","MINT","SWAP","amountUSD","sender","truncateHash","formatDistanceToNowStrict","parseInt","timestamp","TransactionTable","transactions","txFilter","setTxFilter","sortedTransactions","toBeAbsList","firstField","secondField","filteredTransactions","tx","handleFilter","newFilter","flexDirection","checked","BURN","justifyContent","ChartCardsContainer","Overview","liquidityHover","setLiquidityHover","liquidityDateHover","setLiquidityDateHover","volumeHover","setVolumeHover","volumeDateHover","setVolumeDateHover","useProtocolData","protocolData","useProtocolChartData","chartData","useProtocolTransactions","currentDate","Date","formattedLiquidityData","fromUnixTime","date","formattedVolumeData","allTokens","useAllTokenData","formattedTokens","Object","values","allPoolData","useAllPoolData","somePoolsAreLoading","some","Page","mt","PoolsOverview","watchlistPools","px","py","CandleChart","setLabel","chartRef","chartCreated","setChart","handleResize","parentElement","resize","clientWidth","timeScale","fitContent","scrollToPosition","isClient","window","chart","createChart","layout","backgroundColor","textColor","fontFamily","rightPriceScale","scaleMargins","borderVisible","secondsVisible","tickMarkFormatter","unixTime","format","watermark","visible","grid","horzLines","vertLines","crosshair","horzLine","labelVisible","mode","vertLine","labelBackgroundColor","series","addCandlestickSeries","upColor","success","downColor","failure","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","subscribeCrosshairMove","param","point","now","hour","minute","timeZone","parsed","seriesPrices","get","open","ChartCard","tokenPriceData","VOLUME","view","setView","hoverValue","hoverDate","formattedTvlData","TabToggle","isActive","LIQUIDITY","PRICE","pt","valueToDisplay","getLatestValueDisplay","small","ContentLayout","TokenButton","LockedTokensContainer","PoolPage","routeAddress","match","params","showWeeklyData","setShowWeeklyData","useTooltip","tooltip","tooltipVisible","targetRef","scrollTo","usePoolChartData","usePoolTransactions","addPoolToWatchlist","mr","size","token1Price","displayThreshold","tokenPrecision","token0Price","flex","liquidityUSDChange","liquidityToken0","liquidityToken1","onItemClick","volumeUSDChangeWeek","volumeUSDChange","lpFees7d","totalFees","totalFees7d","totalFees24h","CardWrapper","TopMoverCard","Box","radii","ScrollableRow","DataCard","lineHeight","TopTokenMovers","topPriceIncrease","min","increaseRef","moveLeftRef","scrollInterval","setInterval","scrollLeft","scrollWidth","clearInterval","entry","my","TokensOverview","watchListTokens","useCMCLink","cmcPageUrl","setCMCPageUrl","fetch","result","status","json","then","url","fetchLink","StyledCMCLink","UIKitLink","DEFAULT_TIME_WINDOW","weeks","TokenPage","cmcLink","useTokenData","poolsForToken","usePoolsForToken","useTokenTransactions","useTokenChartData","priceData","useTokenPriceData","ONE_HOUR_SECONDS","adjustedPriceData","getTime","close","high","low","watchlistTokens","addWatchlistToken","exists","rel","src","alt","txCount","isInteger","RedirectInvalidToken","isAddress","Info","path","exact","Pools","Tokens","component","Inner","input","button","text","TabToggleGroup","children"],"mappings":"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","file":"static/js/40.877251f4.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { Text, Box, Card, Flex, Skeleton } from '@pancakeswap/uikit'\nimport LineChart from 'views/Info/components/InfoCharts/LineChart'\nimport BarChart from 'views/Info/components/InfoCharts/BarChart'\nimport CandleChart from 'views/Info/components/InfoCharts/CandleChart'\nimport { TabToggleGroup, TabToggle } from 'components/TabToggle'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { ChartEntry, TokenData, PriceChartEntry } from 'state/info/types'\nimport { fromUnixTime } from 'date-fns'\n\nenum ChartView {\n  LIQUIDITY,\n  VOLUME,\n  PRICE,\n}\n\ninterface ChartCardProps {\n  variant: 'pool' | 'token'\n  chartData: ChartEntry[]\n  tokenData?: TokenData\n  tokenPriceData?: PriceChartEntry[]\n}\n\nconst ChartCard: React.FC<ChartCardProps> = ({ variant, chartData, tokenData, tokenPriceData }) => {\n  const [view, setView] = useState(ChartView.VOLUME)\n  const [hoverValue, setHoverValue] = useState<number | undefined>()\n  const [hoverDate, setHoverDate] = useState<string | undefined>()\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n\n  const currentDate = new Date().toLocaleString(locale, { month: 'short', year: 'numeric', day: 'numeric' })\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.liquidityUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n\n  const getLatestValueDisplay = () => {\n    let valueToDisplay = null\n    if (hoverValue) {\n      valueToDisplay = formatAmount(hoverValue)\n    } else if (view === ChartView.VOLUME && formattedVolumeData.length > 0) {\n      valueToDisplay = formatAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\n    } else if (view === ChartView.LIQUIDITY && formattedTvlData.length > 0) {\n      valueToDisplay = formatAmount(formattedTvlData[formattedTvlData.length - 1]?.value)\n    } else if (view === ChartView.PRICE && tokenData?.priceUSD) {\n      valueToDisplay = formatAmount(tokenData.priceUSD)\n    }\n\n    return valueToDisplay ? (\n      <Text fontSize=\"24px\" bold>\n        ${valueToDisplay}\n      </Text>\n    ) : (\n      <Skeleton height=\"36px\" width=\"128px\" />\n    )\n  }\n\n  return (\n    <Card>\n      <TabToggleGroup>\n        <TabToggle isActive={view === ChartView.VOLUME} onClick={() => setView(ChartView.VOLUME)}>\n          <Text>{t('Volume')}</Text>\n        </TabToggle>\n        <TabToggle isActive={view === ChartView.LIQUIDITY} onClick={() => setView(ChartView.LIQUIDITY)}>\n          <Text>{t('Liquidity')}</Text>\n        </TabToggle>\n        {variant === 'token' && (\n          <TabToggle isActive={view === ChartView.PRICE} onClick={() => setView(ChartView.PRICE)}>\n            <Text>{t('Price')}</Text>\n          </TabToggle>\n        )}\n      </TabToggleGroup>\n\n      <Flex flexDirection=\"column\" px=\"24px\" pt=\"24px\">\n        {getLatestValueDisplay()}\n        <Text small color=\"secondary\">\n          {hoverDate || currentDate}\n        </Text>\n      </Flex>\n\n      <Box px=\"24px\" height={variant === 'token' ? '250px' : '335px'}>\n        {view === ChartView.LIQUIDITY ? (\n          <LineChart data={formattedTvlData} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n        ) : view === ChartView.VOLUME ? (\n          <BarChart data={formattedVolumeData} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n        ) : view === ChartView.PRICE ? (\n          <CandleChart data={tokenPriceData} setValue={setHoverValue} setLabel={setHoverDate} />\n        ) : null}\n      </Box>\n    </Card>\n  )\n}\n\nexport default ChartCard\n","import React, { HTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { StarFillIcon, StarLineIcon } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\nconst HoverIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst SaveIcon: React.FC<{ fill: boolean } & HTMLAttributes<HTMLDivElement>> = ({ fill = false, ...rest }) => {\n  const { theme } = useTheme()\n  return (\n    <HoverIcon {...rest}>\n      {fill ? (\n        <StarFillIcon stroke={theme.colors.warning} color={theme.colors.warning} />\n      ) : (\n        <StarLineIcon stroke={theme.colors.textDisabled} />\n      )}\n    </HoverIcon>\n  )\n}\n\nexport default SaveIcon\n","import React, { useRef, useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Skeleton, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport useFetchSearchResults from 'state/info/queries/search'\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { useWatchlistTokens, useWatchlistPools } from 'state/user/hooks'\nimport SaveIcon from 'views/Info/components/SaveIcon'\nimport { useHistory } from 'react-router-dom'\nimport { usePoolDatas, useTokenDatas } from 'state/info/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useDebounce from 'hooks/useDebounce'\nimport { MINIMUM_SEARCH_CHARACTERS } from 'config/constants/info'\nimport { PoolData } from 'state/info/types'\n\nconst Container = styled.div`\n  position: relative;\n  z-index: 30;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  z-index: 9999;\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n`\n\nconst Menu = styled.div<{ hide: boolean }>`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 100%;\n  top: 50px;\n  max-height: 400px;\n  overflow: auto;\n  right: 0;\n  padding: 1.5rem;\n  padding-bottom: 2.5rem;\n  position: absolute;\n  background: ${({ theme }) => theme.colors.background};\n  border-radius: 8px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  margin-top: 4px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    width: 500px;\n    max-height: 600px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-top: 0;\n    width: 800px;\n    max-height: 600px;\n  }\n`\n\nconst Blackout = styled.div`\n  position: absolute;\n  min-height: 100vh;\n  width: 100vw;\n  z-index: 10;\n  background-color: black;\n  opacity: 0.7;\n  left: 0;\n  top: 0;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr;\n  margin: 8px 0;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1.5fr repeat(3, 1fr);\n  }\n`\n\nconst Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  width: 100%;\n  margin: 16px 0;\n`\n\nconst HoverText = styled.div<{ hide: boolean }>`\n  color: ${({ theme }) => theme.colors.secondary};\n  display: ${({ hide }) => (hide ? 'none' : 'block')};\n  margin-top: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst HoverRowLink = styled.div`\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst OptionButton = styled.div<{ enabled: boolean }>`\n  width: fit-content;\n  padding: 4px 8px;\n  border-radius: 8px;\n  display: flex;\n  font-size: 12px;\n  font-weight: 600;\n  margin-right: 10px;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme, enabled }) => (enabled ? theme.colors.primary : 'transparent')};\n  color: ${({ theme, enabled }) => (enabled ? theme.card.background : theme.colors.secondary)};\n  :hover {\n    opacity: 0.6;\n    cursor: pointer;\n  }\n`\ntype BasicTokenData = {\n  address: string\n  symbol: string\n  name: string\n}\nconst tokenIncludesSearchTerm = (token: BasicTokenData, value: string) => {\n  return (\n    token.address.toLowerCase().includes(value.toLowerCase()) ||\n    token.symbol.toLowerCase().includes(value.toLowerCase()) ||\n    token.name.toLowerCase().includes(value.toLowerCase())\n  )\n}\n\nconst poolIncludesSearchTerm = (pool: PoolData, value: string) => {\n  return (\n    pool.address.toLowerCase().includes(value.toLowerCase()) ||\n    tokenIncludesSearchTerm(pool.token0, value) ||\n    tokenIncludesSearchTerm(pool.token1, value)\n  )\n}\n\nconst Search = () => {\n  const history = useHistory()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const menuRef = useRef<HTMLDivElement>(null)\n  const showMoreRef = useRef<HTMLDivElement>(null)\n\n  const [showMenu, setShowMenu] = useState(false)\n  const [value, setValue] = useState('')\n  const debouncedSearchTerm = useDebounce(value, 600)\n\n  const { tokens, pools, tokensLoading, poolsLoading, error } = useFetchSearchResults(debouncedSearchTerm)\n\n  const [tokensShown, setTokensShown] = useState(3)\n  const [poolsShown, setPoolsShown] = useState(3)\n\n  useEffect(() => {\n    setTokensShown(3)\n    setPoolsShown(3)\n  }, [debouncedSearchTerm])\n\n  const handleOutsideClick = (e: any) => {\n    const menuClick = menuRef.current && menuRef.current.contains(e.target)\n    const inputCLick = inputRef.current && inputRef.current.contains(e.target)\n    const showMoreClick = showMoreRef.current && showMoreRef.current.contains(e.target)\n\n    if (!menuClick && !inputCLick && !showMoreClick) {\n      setPoolsShown(3)\n      setTokensShown(3)\n      setShowMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    if (showMenu) {\n      document.addEventListener('click', handleOutsideClick)\n      document.querySelector('body').style.overflow = 'hidden'\n    } else {\n      document.removeEventListener('click', handleOutsideClick)\n      document.querySelector('body').style.overflow = 'visible'\n    }\n\n    return () => {\n      document.removeEventListener('click', handleOutsideClick)\n    }\n  }, [showMenu])\n\n  // watchlist\n  const [savedTokens, addSavedToken] = useWatchlistTokens()\n  const [savedPools, addSavedPool] = useWatchlistPools()\n\n  const handleItemClick = (to: string) => {\n    setShowMenu(false)\n    setPoolsShown(3)\n    setTokensShown(3)\n    history.push(to)\n  }\n\n  // get date for watchlist\n  const watchListTokenData = useTokenDatas(savedTokens)\n  const watchListTokenLoading = watchListTokenData.length !== savedTokens.length\n  const watchListPoolData = usePoolDatas(savedPools)\n  const watchListPoolLoading = watchListPoolData.length !== savedPools.length\n\n  // filter on view\n  const [showWatchlist, setShowWatchlist] = useState(false)\n  const tokensForList = useMemo(() => {\n    if (showWatchlist) {\n      return watchListTokenData.filter((token) => tokenIncludesSearchTerm(token, value))\n    }\n    return tokens.sort((t0, t1) => (t0.volumeUSD > t1.volumeUSD ? -1 : 1))\n  }, [showWatchlist, tokens, watchListTokenData, value])\n\n  const poolForList = useMemo(() => {\n    if (showWatchlist) {\n      return watchListPoolData.filter((pool) => poolIncludesSearchTerm(pool, value))\n    }\n    return pools.sort((p0, p1) => (p0.volumeUSD > p1.volumeUSD ? -1 : 1))\n  }, [pools, showWatchlist, watchListPoolData, value])\n\n  const contentUnderTokenList = () => {\n    const isLoading = showWatchlist ? watchListTokenLoading : tokensLoading\n    const noTokensFound =\n      tokensForList.length === 0 && !isLoading && debouncedSearchTerm.length >= MINIMUM_SEARCH_CHARACTERS\n    const noWatchlistTokens = tokensForList.length === 0 && !isLoading\n    const showMessage = showWatchlist ? noWatchlistTokens : noTokensFound\n    const noTokensMessage = showWatchlist ? t('Saved tokens will appear here') : t('No results')\n    return (\n      <>\n        {isLoading && <Skeleton />}\n        {showMessage && <Text>{noTokensMessage}</Text>}\n        {!showWatchlist && debouncedSearchTerm.length < MINIMUM_SEARCH_CHARACTERS && (\n          <Text>{t('Search pools or tokens')}</Text>\n        )}\n      </>\n    )\n  }\n\n  const contentUnderPoolList = () => {\n    const isLoading = showWatchlist ? watchListPoolLoading : poolsLoading\n    const noPoolsFound =\n      poolForList.length === 0 && !poolsLoading && debouncedSearchTerm.length >= MINIMUM_SEARCH_CHARACTERS\n    const noWatchlistPools = poolForList.length === 0 && !isLoading\n    const showMessage = showWatchlist ? noWatchlistPools : noPoolsFound\n    const noPoolsMessage = showWatchlist ? t('Saved tokens will appear here') : t('No results')\n    return (\n      <>\n        {isLoading && <Skeleton />}\n        {showMessage && <Text>{noPoolsMessage}</Text>}\n        {!showWatchlist && debouncedSearchTerm.length < MINIMUM_SEARCH_CHARACTERS && (\n          <Text>{t('Search pools or tokens')}</Text>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <>\n      {showMenu ? <Blackout /> : null}\n      <Container>\n        <StyledInput\n          type=\"text\"\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          placeholder={t('Search pools or tokens')}\n          ref={inputRef}\n          onFocus={() => {\n            setShowMenu(true)\n          }}\n        />\n        <Menu hide={!showMenu} ref={menuRef}>\n          <Flex mb=\"16px\">\n            <OptionButton enabled={!showWatchlist} onClick={() => setShowWatchlist(false)}>\n              {t('Search')}\n            </OptionButton>\n            <OptionButton enabled={showWatchlist} onClick={() => setShowWatchlist(true)}>\n              {t('Watchlist')}\n            </OptionButton>\n          </Flex>\n          {error && <Text color=\"failure\">{t('Error occurred, please try again')}</Text>}\n\n          <ResponsiveGrid>\n            <Text bold color=\"secondary\">\n              {t('Tokens')}\n            </Text>\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Price')}\n              </Text>\n            )}\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Volume 24H')}\n              </Text>\n            )}\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Liquidity')}\n              </Text>\n            )}\n          </ResponsiveGrid>\n          {tokensForList.slice(0, tokensShown).map((token, i) => {\n            return (\n              // eslint-disable-next-line react/no-array-index-key\n              <HoverRowLink onClick={() => handleItemClick(`/info/token/${token.address}`)} key={i}>\n                <ResponsiveGrid>\n                  <Flex>\n                    <CurrencyLogo address={token.address} />\n                    <Text ml=\"10px\">\n                      <Text>{`${token.name} (${token.symbol})`}</Text>\n                    </Text>\n                    <SaveIcon\n                      id=\"watchlist-icon\"\n                      style={{ marginLeft: '8px' }}\n                      fill={savedTokens.includes(token.address)}\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        addSavedToken(token.address)\n                      }}\n                    />\n                  </Flex>\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(token.priceUSD)}</Text>}\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(token.volumeUSD)}</Text>}\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(token.liquidityUSD)}</Text>}\n                </ResponsiveGrid>\n              </HoverRowLink>\n            )\n          })}\n          {contentUnderTokenList()}\n          <HoverText\n            onClick={() => {\n              setTokensShown(tokensShown + 5)\n            }}\n            hide={tokensForList.length <= tokensShown}\n            ref={showMoreRef}\n          >\n            {t('See more...')}\n          </HoverText>\n\n          <Break />\n          <ResponsiveGrid>\n            <Text bold color=\"secondary\" mb=\"8px\">\n              {t('Pools')}\n            </Text>\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Volume 24H')}\n              </Text>\n            )}\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Volume 7D')}\n              </Text>\n            )}\n            {!isXs && !isSm && (\n              <Text textAlign=\"end\" fontSize=\"12px\">\n                {t('Liquidity')}\n              </Text>\n            )}\n          </ResponsiveGrid>\n          {poolForList.slice(0, poolsShown).map((p, i) => {\n            return (\n              // eslint-disable-next-line react/no-array-index-key\n              <HoverRowLink onClick={() => handleItemClick(`/info/pool/${p.address}`)} key={i}>\n                <ResponsiveGrid>\n                  <Flex>\n                    <DoubleCurrencyLogo address0={p.token0.address} address1={p.token1.address} />\n                    <Text ml=\"10px\" style={{ whiteSpace: 'nowrap' }}>\n                      <Text>{`${p.token0.symbol} / ${p.token1.symbol}`}</Text>\n                    </Text>\n                    <SaveIcon\n                      id=\"watchlist-icon\"\n                      style={{ marginLeft: '10px' }}\n                      fill={savedPools.includes(p.address)}\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        addSavedPool(p.address)\n                      }}\n                    />\n                  </Flex>\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(p.volumeUSD)}</Text>}\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(p.volumeUSDWeek)}</Text>}\n                  {!isXs && !isSm && <Text textAlign=\"end\">${formatAmount(p.liquidityUSD)}</Text>}\n                </ResponsiveGrid>\n              </HoverRowLink>\n            )\n          })}\n          {contentUnderPoolList()}\n          <HoverText\n            onClick={() => {\n              setPoolsShown(poolsShown + 5)\n            }}\n            hide={poolForList.length <= poolsShown}\n            ref={showMoreRef}\n          >\n            {t('See more...')}\n          </HoverText>\n        </Menu>\n      </Container>\n    </>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport { Box, Flex, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Search from 'views/Info/components/InfoSearch'\n\nconst NavWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.gradients.cardHeader};\n  justify-content: space-between;\n  padding: 20px 16px;\n  flex-direction: column;\n  gap: 8px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 20px 40px;\n    flex-direction: row;\n  }\n`\n\nconst InfoNav = () => {\n  const { t } = useTranslation()\n  const isPools = useRouteMatch(['/info/pools', '/info/pool', '/info/pair'])\n  const isTokens = useRouteMatch(['/info/tokens', '/info/token'])\n  let activeIndex = 0\n  if (isPools) {\n    activeIndex = 1\n  }\n  if (isTokens) {\n    activeIndex = 2\n  }\n  return (\n    <NavWrapper>\n      <Box>\n        <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={Link} to=\"/info\">\n            {t('Overview')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={Link} to=\"/info/pools\">\n            {t('Pools')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={Link} to=\"/info/tokens\">\n            {t('Tokens')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Box>\n      <Box width={['100%', '100%', '250px']}>\n        <Search />\n      </Box>\n    </NavWrapper>\n  )\n}\n\nexport default InfoNav\n","import React, { useEffect, Dispatch, SetStateAction } from 'react'\nimport { ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area } from 'recharts'\nimport useTheme from 'hooks/useTheme'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { LineChartLoader } from 'views/Info/components/ChartLoaders'\nimport { useTranslation } from 'contexts/Localization'\n\nexport type LineChartProps = {\n  data: any[]\n  setHoverValue: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setHoverDate: Dispatch<SetStateAction<string | undefined>> // used for label of value\n} & React.HTMLAttributes<HTMLDivElement>\n\n// Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\nconst HoverUpdater = ({ locale, payload, setHoverValue, setHoverDate }) => {\n  useEffect(() => {\n    setHoverValue(payload.value)\n    setHoverDate(payload.time.toLocaleString(locale, { year: 'numeric', day: 'numeric', month: 'short' }))\n  }, [locale, payload.value, payload.time, setHoverValue, setHoverDate])\n\n  return null\n}\n\n/**\n * Note: remember that it needs to be mounted inside the container with fixed height\n */\nconst LineChart = ({ data, setHoverValue, setHoverDate }: LineChartProps) => {\n  const {\n    currentLanguage: { locale },\n  } = useTranslation()\n  const { theme } = useTheme()\n  if (!data || data.length === 0) {\n    return <LineChartLoader />\n  }\n  return (\n    <ResponsiveContainer>\n      <AreaChart\n        data={data}\n        width={300}\n        height={308}\n        margin={{\n          top: 5,\n          right: 15,\n          left: 0,\n          bottom: 5,\n        }}\n        onMouseLeave={() => {\n          if (setHoverDate) setHoverDate(undefined)\n          if (setHoverValue) setHoverValue(undefined)\n        }}\n      >\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor={theme.colors.inputSecondary} stopOpacity={0.5} />\n            <stop offset=\"100%\" stopColor={theme.colors.secondary} stopOpacity={0} />\n          </linearGradient>\n        </defs>\n        <XAxis\n          dataKey=\"time\"\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={(time) => time.toLocaleDateString(undefined, { day: '2-digit' })}\n          minTickGap={10}\n        />\n        <YAxis\n          dataKey=\"value\"\n          tickCount={6}\n          scale=\"linear\"\n          axisLine={false}\n          tickLine={false}\n          fontSize=\"12px\"\n          tickFormatter={(val) => `$${formatAmount(val)}`}\n          orientation=\"right\"\n          tick={{ dx: 10, fill: theme.colors.textSubtle }}\n        />\n        <Tooltip\n          cursor={{ stroke: theme.colors.secondary }}\n          contentStyle={{ display: 'none' }}\n          formatter={(tooltipValue, name, props) => (\n            <HoverUpdater\n              locale={locale}\n              payload={props.payload}\n              setHoverValue={setHoverValue}\n              setHoverDate={setHoverDate}\n            />\n          )}\n        />\n        <Area dataKey=\"value\" type=\"monotone\" stroke={theme.colors.secondary} fill=\"url(#gradient)\" strokeWidth={2} />\n      </AreaChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default LineChart\n","import React, { useState, useMemo, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, Skeleton, useMatchBreakpoints, ArrowBackIcon, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { TokenData } from 'state/info/types'\nimport { Link } from 'react-router-dom'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\n/**\n *  Columns on different layouts\n *  6 = | # | Name | Price | Price Change | Volume 24H | TVL |\n *  5 = | # | Name | Price |              | Volume 24H | TVL |\n *  4 = | # | Name | Price |              | Volume 24H |     |\n *  2 = |   | Name |       |              | Volume 24H |     |\n *  On smallest screen Name is reduced to just symbol\n */\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  padding: 0 24px;\n\n  grid-template-columns: 20px 3fr repeat(4, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 2fr repeat(3, 1fr);\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 20px 2fr repeat(2, 1fr);\n    & :nth-child(6) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 670px) {\n    grid-template-columns: 1fr 1fr;\n    > *:first-child {\n      display: none;\n    }\n    > *:nth-child(3) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst ResponsiveLogo = styled(CurrencyLogo)`\n  @media screen and (max-width: 670px) {\n    width: 16px;\n    height: 16px;\n  }\n`\n\nconst TableLoader: React.FC = () => {\n  const loadingRow = (\n    <ResponsiveGrid>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </ResponsiveGrid>\n  )\n  return (\n    <>\n      {loadingRow}\n      {loadingRow}\n      {loadingRow}\n    </>\n  )\n}\n\nconst DataRow: React.FC<{ tokenData: TokenData; index: number }> = ({ tokenData, index }) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  return (\n    <LinkWrapper to={`/info/token/${tokenData.address}`}>\n      <ResponsiveGrid>\n        <Flex>\n          <Text>{index + 1}</Text>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ResponsiveLogo address={tokenData.address} />\n          {(isXs || isSm) && <Text ml=\"8px\">{tokenData.symbol}</Text>}\n          {!isXs && !isSm && (\n            <Flex marginLeft=\"10px\">\n              <Text>{tokenData.name}</Text>\n              <Text ml=\"8px\">({tokenData.symbol})</Text>\n            </Flex>\n          )}\n        </Flex>\n        <Text fontWeight={400}>${formatAmount(tokenData.priceUSD, { notation: 'standard' })}</Text>\n        <Text fontWeight={400}>\n          <Percent value={tokenData.priceUSDChange} fontWeight={400} />\n        </Text>\n        <Text fontWeight={400}>${formatAmount(tokenData.volumeUSD)}</Text>\n        <Text fontWeight={400}>${formatAmount(tokenData.liquidityUSD)}</Text>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\nconst SORT_FIELD = {\n  name: 'name',\n  volumeUSD: 'volumeUSD',\n  liquidityUSD: 'liquidityUSD',\n  priceUSD: 'priceUSD',\n  priceUSDChange: 'priceUSDChange',\n  priceUSDChangeWeek: 'priceUSDChangeWeek',\n}\n\nconst MAX_ITEMS = 10\n\nconst TokenTable: React.FC<{\n  tokenDatas: TokenData[] | undefined\n  maxItems?: number\n}> = ({ tokenDatas, maxItems = MAX_ITEMS }) => {\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  const { t } = useTranslation()\n\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (tokenDatas) {\n      if (tokenDatas.length % maxItems === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(tokenDatas.length / maxItems) + extraPages)\n    }\n  }, [maxItems, tokenDatas])\n\n  const sortedTokens = useMemo(() => {\n    return tokenDatas\n      ? tokenDatas\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof TokenData] > b[sortField as keyof TokenData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [tokenDatas, maxItems, page, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  if (!tokenDatas) {\n    return <Skeleton />\n  }\n\n  return (\n    <TableWrapper>\n      <ResponsiveGrid>\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          #\n        </Text>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.name)}\n          textTransform=\"uppercase\"\n        >\n          {t('Name')} {arrow(SORT_FIELD.name)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.priceUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Price')} {arrow(SORT_FIELD.priceUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.priceUSDChange)}\n          textTransform=\"uppercase\"\n        >\n          {t('Price Change')} {arrow(SORT_FIELD.priceUSDChange)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 24H')} {arrow(SORT_FIELD.volumeUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.liquidityUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Liquidity')} {arrow(SORT_FIELD.liquidityUSD)}\n        </ClickableColumnHeader>\n      </ResponsiveGrid>\n\n      <Break />\n      {sortedTokens.length > 0 ? (\n        <>\n          {sortedTokens.map((data, i) => {\n            if (data) {\n              return (\n                <React.Fragment key={data.address}>\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} tokenData={data} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </>\n      ) : (\n        <>\n          <TableLoader />\n          <Box />\n        </>\n      )}\n    </TableWrapper>\n  )\n}\n\nexport default TokenTable\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Text, Flex, Box, Skeleton, ArrowBackIcon, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { PoolData } from 'state/info/types'\nimport { ITEMS_PER_INFO_TABLE_PAGE } from 'config/constants/info'\nimport { DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\n/**\n *  Columns on different layouts\n *  5 = | # | Pool | TVL | Volume 24H | Volume 7D |\n *  4 = | # | Pool |     | Volume 24H | Volume 7D |\n *  3 = | # | Pool |     | Volume 24H |           |\n *  2 = |   | Pool |     | Volume 24H |           |\n */\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n  grid-template-columns: 20px 3.5fr repeat(5, 1fr);\n\n  padding: 0 24px;\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(3, 1fr);\n    & :nth-child(4),\n    & :nth-child(5) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 20px 1.5fr repeat(1, 1fr);\n    & :nth-child(4),\n    & :nth-child(5),\n    & :nth-child(6),\n    & :nth-child(7) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    grid-template-columns: 2.5fr repeat(1, 1fr);\n    > *:nth-child(1) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst SORT_FIELD = {\n  volumeUSD: 'volumeUSD',\n  liquidityUSD: 'liquidityUSD',\n  volumeUSDWeek: 'volumeUSDWeek',\n  lpFees24h: 'lpFees24h',\n  lpApr7d: 'lpApr7d',\n}\n\nconst LoadingRow: React.FC = () => (\n  <ResponsiveGrid>\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n  </ResponsiveGrid>\n)\n\nconst TableLoader: React.FC = () => (\n  <>\n    <LoadingRow />\n    <LoadingRow />\n    <LoadingRow />\n  </>\n)\n\nconst DataRow = ({ poolData, index }: { poolData: PoolData; index: number }) => {\n  return (\n    <LinkWrapper to={`/info/pool/${poolData.address}`}>\n      <ResponsiveGrid>\n        <Text>{index + 1}</Text>\n        <Flex>\n          <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} />\n          <Text ml=\"8px\">\n            {poolData.token0.symbol}/{poolData.token1.symbol}\n          </Text>\n        </Flex>\n        <Text>${formatAmount(poolData.volumeUSD)}</Text>\n        <Text>${formatAmount(poolData.volumeUSDWeek)}</Text>\n        <Text>${formatAmount(poolData.lpFees24h)}</Text>\n        <Text>{formatAmount(poolData.lpApr7d)}%</Text>\n        <Text>${formatAmount(poolData.liquidityUSD)}</Text>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\ninterface PoolTableProps {\n  poolDatas: PoolData[]\n  loading?: boolean // If true shows indication that SOME pools are loading, but the ones already fetched will be shown\n}\n\nconst PoolTable: React.FC<PoolTableProps> = ({ poolDatas, loading }) => {\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n  const { t } = useTranslation()\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (poolDatas.length % ITEMS_PER_INFO_TABLE_PAGE === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(poolDatas.length / ITEMS_PER_INFO_TABLE_PAGE) + extraPages)\n  }, [poolDatas])\n\n  const sortedPools = useMemo(() => {\n    return poolDatas\n      ? poolDatas\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof PoolData] > b[sortField as keyof PoolData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .slice(ITEMS_PER_INFO_TABLE_PAGE * (page - 1), page * ITEMS_PER_INFO_TABLE_PAGE)\n      : []\n  }, [page, poolDatas, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  return (\n    <TableWrapper>\n      <ResponsiveGrid>\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          #\n        </Text>\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Pool')}\n        </Text>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 24H')} {arrow(SORT_FIELD.volumeUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSDWeek)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 7D')} {arrow(SORT_FIELD.volumeUSDWeek)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.lpFees24h)}\n          textTransform=\"uppercase\"\n        >\n          {t('LP reward fees 24H')} {arrow(SORT_FIELD.lpFees24h)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.lpApr7d)}\n          textTransform=\"uppercase\"\n        >\n          {t('LP reward APR')} {arrow(SORT_FIELD.lpApr7d)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.liquidityUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Liquidity')} {arrow(SORT_FIELD.liquidityUSD)}\n        </ClickableColumnHeader>\n      </ResponsiveGrid>\n      <Break />\n      {sortedPools.length > 0 ? (\n        <>\n          {sortedPools.map((poolData, i) => {\n            if (poolData) {\n              return (\n                <React.Fragment key={poolData.address}>\n                  <DataRow index={(page - 1) * ITEMS_PER_INFO_TABLE_PAGE + i} poolData={poolData} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          {loading && <LoadingRow />}\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </>\n      ) : (\n        <>\n          <TableLoader />\n          {/* spacer */}\n          <Box />\n        </>\n      )}\n    </TableWrapper>\n  )\n}\n\nexport default PoolTable\n","import React, { useEffect, Dispatch, SetStateAction } from 'react'\nimport { BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Bar } from 'recharts'\nimport useTheme from 'hooks/useTheme'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { BarChartLoader } from 'views/Info/components/ChartLoaders'\nimport { useTranslation } from 'contexts/Localization'\n\nexport type LineChartProps = {\n  data: any[]\n  height?: string\n  chartHeight?: string\n  setHoverValue: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setHoverDate: Dispatch<SetStateAction<string | undefined>> // used for label of value\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CustomBar = ({\n  x,\n  y,\n  width,\n  height,\n  fill,\n}: {\n  x: number\n  y: number\n  width: number\n  height: number\n  fill: string\n}) => {\n  return (\n    <g>\n      <rect x={x} y={y} fill={fill} width={width} height={height} rx=\"2\" />\n    </g>\n  )\n}\n\n// Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\nconst HoverUpdater = ({ locale, payload, setHoverValue, setHoverDate }) => {\n  useEffect(() => {\n    setHoverValue(payload.value)\n    setHoverDate(payload.time.toLocaleString(locale, { year: 'numeric', day: 'numeric', month: 'short' }))\n  }, [locale, payload.value, payload.time, setHoverValue, setHoverDate])\n\n  return null\n}\n\nconst Chart = ({ data, setHoverValue, setHoverDate }: LineChartProps) => {\n  const {\n    currentLanguage: { locale },\n  } = useTranslation()\n  const { theme } = useTheme()\n  if (!data || data.length === 0) {\n    return <BarChartLoader />\n  }\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart\n        data={data}\n        margin={{\n          top: 5,\n          right: 15,\n          left: 0,\n          bottom: 5,\n        }}\n        onMouseLeave={() => {\n          setHoverDate(undefined)\n          setHoverValue(undefined)\n        }}\n      >\n        <XAxis\n          dataKey=\"time\"\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={(time) => time.toLocaleDateString(undefined, { day: '2-digit' })}\n          minTickGap={10}\n        />\n        <YAxis\n          dataKey=\"value\"\n          tickCount={6}\n          scale=\"linear\"\n          axisLine={false}\n          tickLine={false}\n          color={theme.colors.textSubtle}\n          fontSize=\"12px\"\n          tickFormatter={(val) => `$${formatAmount(val)}`}\n          orientation=\"right\"\n          tick={{ dx: 10, fill: theme.colors.textSubtle }}\n        />\n        <Tooltip\n          cursor={{ fill: theme.colors.backgroundDisabled }}\n          contentStyle={{ display: 'none' }}\n          formatter={(tooltipValue, name, props) => (\n            <HoverUpdater\n              locale={locale}\n              payload={props.payload}\n              setHoverValue={setHoverValue}\n              setHoverDate={setHoverDate}\n            />\n          )}\n        />\n        <Bar\n          dataKey=\"value\"\n          fill={theme.colors.primary}\n          shape={(props) => (\n            <CustomBar height={props.height} width={props.width} x={props.x} y={props.y} fill={theme.colors.primary} />\n          )}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default Chart\n","// TODO PCS refactor ternaries\n/* eslint-disable no-nested-ternary */\nimport React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { formatDistanceToNowStrict } from 'date-fns'\nimport { Text, Flex, Box, Radio, Skeleton, LinkExternal, ArrowForwardIcon, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { Transaction, TransactionType } from 'state/info/types'\nimport { ITEMS_PER_INFO_TABLE_PAGE } from 'config/constants/info'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n  grid-template-columns: 2fr 0.8fr repeat(4, 1fr);\n  padding: 0 24px;\n  @media screen and (max-width: 940px) {\n    grid-template-columns: 2fr repeat(4, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 2fr repeat(2, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2fr 1fr;\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n    & > *:nth-child(2) {\n      display: none;\n    }\n  }\n`\n\nconst RadioGroup = styled(Flex)`\n  align-items: center;\n  margin-right: 16px;\n  margin-top: 8px;\n  cursor: pointer;\n`\n\nconst SORT_FIELD = {\n  amountUSD: 'amountUSD',\n  timestamp: 'timestamp',\n  sender: 'sender',\n  amountToken0: 'amountToken0',\n  amountToken1: 'amountToken1',\n}\n\nconst TableLoader: React.FC = () => {\n  const loadingRow = (\n    <ResponsiveGrid>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </ResponsiveGrid>\n  )\n  return (\n    <>\n      {loadingRow}\n      {loadingRow}\n      {loadingRow}\n    </>\n  )\n}\n\nconst DataRow: React.FC<{ transaction: Transaction }> = ({ transaction }) => {\n  const { t } = useTranslation()\n  const abs0 = Math.abs(transaction.amountToken0)\n  const abs1 = Math.abs(transaction.amountToken1)\n  const outputTokenSymbol = transaction.amountToken0 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n  const inputTokenSymbol = transaction.amountToken1 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n\n  return (\n    <ResponsiveGrid>\n      <LinkExternal href={getBscScanLink(transaction.hash, 'transaction')}>\n        <Text>\n          {transaction.type === TransactionType.MINT\n            ? t('Add %token0% and %token1%', { token0: transaction.token0Symbol, token1: transaction.token1Symbol })\n            : transaction.type === TransactionType.SWAP\n            ? t('Swap %token0% for %token1%', { token0: inputTokenSymbol, token1: outputTokenSymbol })\n            : t('Remove %token0% and %token1%', { token0: transaction.token0Symbol, token1: transaction.token1Symbol })}\n        </Text>\n      </LinkExternal>\n      <Text>${formatAmount(transaction.amountUSD)}</Text>\n      <Text>\n        <Text>{`${formatAmount(abs0)} ${transaction.token0Symbol}`}</Text>\n      </Text>\n      <Text>\n        <Text>{`${formatAmount(abs1)} ${transaction.token1Symbol}`}</Text>\n      </Text>\n      <LinkExternal href={getBscScanLink(transaction.sender, 'address')}>\n        {truncateHash(transaction.sender)}\n      </LinkExternal>\n      <Text>{formatDistanceToNowStrict(parseInt(transaction.timestamp, 10) * 1000)}</Text>\n    </ResponsiveGrid>\n  )\n}\n\nconst TransactionTable: React.FC<{\n  transactions: Transaction[]\n}> = ({ transactions }) => {\n  const [sortField, setSortField] = useState(SORT_FIELD.timestamp)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  const { t } = useTranslation()\n\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  const [txFilter, setTxFilter] = useState<TransactionType | undefined>(undefined)\n\n  const sortedTransactions = useMemo(() => {\n    const toBeAbsList = [SORT_FIELD.amountToken0, SORT_FIELD.amountToken1]\n    return transactions\n      ? transactions\n          .slice()\n          .sort((a, b) => {\n            if (a && b) {\n              const firstField = a[sortField as keyof Transaction]\n              const secondField = b[sortField as keyof Transaction]\n              const [first, second] = toBeAbsList.includes(sortField)\n                ? [Math.abs(firstField as number), Math.abs(secondField as number)]\n                : [firstField, secondField]\n              return first > second ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .filter((x) => {\n            return txFilter === undefined || x.type === txFilter\n          })\n          .slice(ITEMS_PER_INFO_TABLE_PAGE * (page - 1), page * ITEMS_PER_INFO_TABLE_PAGE)\n      : []\n  }, [transactions, page, sortField, sortDirection, txFilter])\n\n  // Update maxPage based on amount of items & applied filtering\n  useEffect(() => {\n    if (transactions) {\n      const filteredTransactions = transactions.filter((tx) => {\n        return txFilter === undefined || tx.type === txFilter\n      })\n      if (filteredTransactions.length % ITEMS_PER_INFO_TABLE_PAGE === 0) {\n        setMaxPage(Math.floor(filteredTransactions.length / ITEMS_PER_INFO_TABLE_PAGE))\n      } else {\n        setMaxPage(Math.floor(filteredTransactions.length / ITEMS_PER_INFO_TABLE_PAGE) + 1)\n      }\n    }\n  }, [transactions, txFilter])\n\n  const handleFilter = useCallback(\n    (newFilter: TransactionType) => {\n      if (newFilter !== txFilter) {\n        setTxFilter(newFilter)\n        setPage(1)\n      }\n    },\n    [txFilter],\n  )\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  return (\n    <Wrapper>\n      <Flex mb=\"16px\">\n        <Flex flexDirection={['column', 'row']}>\n          <RadioGroup onClick={() => handleFilter(undefined)}>\n            <Radio onChange={() => null} scale=\"sm\" checked={txFilter === undefined} />\n            <Text ml=\"8px\">{t('All')}</Text>\n          </RadioGroup>\n\n          <RadioGroup onClick={() => handleFilter(TransactionType.SWAP)}>\n            <Radio onChange={() => null} scale=\"sm\" checked={txFilter === TransactionType.SWAP} />\n            <Text ml=\"8px\">{t('Swaps')}</Text>\n          </RadioGroup>\n        </Flex>\n\n        <Flex flexDirection={['column', 'row']}>\n          <RadioGroup onClick={() => handleFilter(TransactionType.MINT)}>\n            <Radio onChange={() => null} scale=\"sm\" checked={txFilter === TransactionType.MINT} />\n            <Text ml=\"8px\">{t('Adds')}</Text>\n          </RadioGroup>\n\n          <RadioGroup onClick={() => handleFilter(TransactionType.BURN)}>\n            <Radio onChange={() => null} scale=\"sm\" checked={txFilter === TransactionType.BURN} />\n            <Text ml=\"8px\">{t('Removes')}</Text>\n          </RadioGroup>\n        </Flex>\n      </Flex>\n      <TableWrapper>\n        <ResponsiveGrid>\n          <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n            {t('Action')}\n          </Text>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.amountUSD)}\n            textTransform=\"uppercase\"\n          >\n            {t('Total Value')} {arrow(SORT_FIELD.amountUSD)}\n          </ClickableColumnHeader>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.amountToken0)}\n            textTransform=\"uppercase\"\n          >\n            {t('Token Amount')} {arrow(SORT_FIELD.amountToken0)}\n          </ClickableColumnHeader>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.amountToken1)}\n            textTransform=\"uppercase\"\n          >\n            {t('Token Amount')} {arrow(SORT_FIELD.amountToken1)}\n          </ClickableColumnHeader>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.sender)}\n            textTransform=\"uppercase\"\n          >\n            {t('Account')} {arrow(SORT_FIELD.sender)}\n          </ClickableColumnHeader>\n          <ClickableColumnHeader\n            color=\"secondary\"\n            fontSize=\"12px\"\n            bold\n            onClick={() => handleSort(SORT_FIELD.timestamp)}\n            textTransform=\"uppercase\"\n          >\n            {t('Time')} {arrow(SORT_FIELD.timestamp)}\n          </ClickableColumnHeader>\n        </ResponsiveGrid>\n        <Break />\n\n        {transactions ? (\n          <>\n            {sortedTransactions.map((transaction, index) => {\n              if (transaction) {\n                return (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <React.Fragment key={index}>\n                    <DataRow transaction={transaction} />\n                    <Break />\n                  </React.Fragment>\n                )\n              }\n              return null\n            })}\n            {sortedTransactions.length === 0 ? (\n              <Flex justifyContent=\"center\">\n                <Text>{t('No Transactions')}</Text>\n              </Flex>\n            ) : undefined}\n            <PageButtons>\n              <Arrow\n                onClick={() => {\n                  setPage(page === 1 ? page : page - 1)\n                }}\n              >\n                <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n              </Arrow>\n\n              <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n              <Arrow\n                onClick={() => {\n                  setPage(page === maxPage ? page : page + 1)\n                }}\n              >\n                <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n              </Arrow>\n            </PageButtons>\n          </>\n        ) : (\n          <>\n            <TableLoader />\n            {/* spacer */}\n            <Box />\n          </>\n        )}\n      </TableWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TransactionTable\n","import React, { useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, Heading, Card, Skeleton } from '@pancakeswap/uikit'\nimport { fromUnixTime } from 'date-fns'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport LineChart from 'views/Info/components/InfoCharts/LineChart'\nimport TokenTable from 'views/Info/components/InfoTables/TokensTable'\nimport PoolTable from 'views/Info/components/InfoTables/PoolsTable'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport BarChart from 'views/Info/components/InfoCharts/BarChart'\nimport {\n  useAllPoolData,\n  useAllTokenData,\n  useProtocolChartData,\n  useProtocolData,\n  useProtocolTransactions,\n} from 'state/info/hooks'\nimport TransactionTable from 'views/Info/components/InfoTables/TransactionsTable'\n\nexport const ChartCardsContainer = styled(Flex)`\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  padding: 0;\n  gap: 1em;\n\n  & > * {\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  } ;\n`\n\nconst Overview: React.FC = () => {\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const [liquidityHover, setLiquidityHover] = useState<number | undefined>()\n  const [liquidityDateHover, setLiquidityDateHover] = useState<string | undefined>()\n  const [volumeHover, setVolumeHover] = useState<number | undefined>()\n  const [volumeDateHover, setVolumeDateHover] = useState<string | undefined>()\n\n  const [protocolData] = useProtocolData()\n  const [chartData] = useProtocolChartData()\n  const [transactions] = useProtocolTransactions()\n\n  const currentDate = new Date().toLocaleString(locale, { month: 'short', year: 'numeric', day: 'numeric' })\n\n  // Getting latest liquidity and volumeUSD to display on top of chart when not hovered\n  useEffect(() => {\n    if (volumeHover == null && protocolData) {\n      setVolumeHover(protocolData.volumeUSD)\n    }\n  }, [protocolData, volumeHover])\n  useEffect(() => {\n    if (liquidityHover == null && protocolData) {\n      setLiquidityHover(protocolData.liquidityUSD)\n    }\n  }, [liquidityHover, protocolData])\n\n  const formattedLiquidityData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.liquidityUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((token) => token.data)\n      .filter((token) => token)\n  }, [allTokens])\n\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((pool) => pool.data)\n      .filter((pool) => pool)\n  }, [allPoolData])\n\n  const somePoolsAreLoading = useMemo(() => {\n    return Object.values(allPoolData).some((pool) => !pool.data)\n  }, [allPoolData])\n\n  return (\n    <Page>\n      <Heading scale=\"lg\" mb=\"16px\" id=\"info-overview-title\">\n        {t('PancakeSwap Info & Analytics')}\n      </Heading>\n      <ChartCardsContainer>\n        <Card>\n          <Box p={['16px', '16px', '24px']}>\n            <Text bold color=\"secondary\">\n              {t('Liquidity')}\n            </Text>\n            {liquidityHover > 0 ? (\n              <Text bold fontSize=\"24px\">\n                ${formatAmount(liquidityHover)}\n              </Text>\n            ) : (\n              <Skeleton width=\"128px\" height=\"36px\" />\n            )}\n            <Text>{liquidityDateHover ?? currentDate}</Text>\n            <Box height=\"250px\">\n              <LineChart\n                data={formattedLiquidityData}\n                setHoverValue={setLiquidityHover}\n                setHoverDate={setLiquidityDateHover}\n              />\n            </Box>\n          </Box>\n        </Card>\n        <Card>\n          <Box p={['16px', '16px', '24px']}>\n            <Text bold color=\"secondary\">\n              {t('Volume 24H')}\n            </Text>\n            {volumeHover > 0 ? (\n              <Text bold fontSize=\"24px\">\n                ${formatAmount(volumeHover)}\n              </Text>\n            ) : (\n              <Skeleton width=\"128px\" height=\"36px\" />\n            )}\n            <Text>{volumeDateHover ?? currentDate}</Text>\n            <Box height=\"250px\">\n              <BarChart data={formattedVolumeData} setHoverValue={setVolumeHover} setHoverDate={setVolumeDateHover} />\n            </Box>\n          </Box>\n        </Card>\n      </ChartCardsContainer>\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\">\n        {t('Top Tokens')}\n      </Heading>\n      <TokenTable tokenDatas={formattedTokens} />\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\">\n        {t('Top Pools')}\n      </Heading>\n      <PoolTable poolDatas={poolDatas} loading={somePoolsAreLoading} />\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\">\n        {t('Transactions')}\n      </Heading>\n      <TransactionTable transactions={transactions} />\n    </Page>\n  )\n}\n\nexport default Overview\n","import React, { useMemo } from 'react'\nimport { Text, Heading, Card } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport PoolTable from 'views/Info/components/InfoTables/PoolsTable'\nimport { useAllPoolData, usePoolDatas } from 'state/info/hooks'\nimport { useWatchlistPools } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nconst PoolsOverview: React.FC = () => {\n  const { t } = useTranslation()\n\n  // get all the pool datas that exist\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((pool) => pool.data)\n      .filter((pool) => pool)\n  }, [allPoolData])\n\n  const [savedPools] = useWatchlistPools()\n  const watchlistPools = usePoolDatas(savedPools)\n\n  return (\n    <Page>\n      <Heading scale=\"lg\" mb=\"16px\">\n        {t('Your Watchlist')}\n      </Heading>\n      <Card>\n        {watchlistPools.length > 0 ? (\n          <PoolTable poolDatas={watchlistPools} />\n        ) : (\n          <Text px=\"24px\" py=\"16px\">\n            {t('Saved pools will appear here')}\n          </Text>\n        )}\n      </Card>\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\" id=\"info-pools-title\">\n        {t('All Pools')}\n      </Heading>\n      <PoolTable poolDatas={poolDatas} />\n    </Page>\n  )\n}\n\nexport default PoolsOverview\n","import React, { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { format } from 'date-fns'\nimport useTheme from 'hooks/useTheme'\nimport { CandleChartLoader } from 'views/Info/components/ChartLoaders'\n\nconst CANDLE_CHART_HEIGHT = 250\n\nexport type LineChartProps = {\n  data: any[]\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for value label on hover\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CandleChart = ({ data, setValue, setLabel, ...rest }: LineChartProps) => {\n  const { theme } = useTheme()\n  const {\n    currentLanguage: { locale },\n  } = useTranslation()\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, CANDLE_CHART_HEIGHT)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return null\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: CANDLE_CHART_HEIGHT,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: theme.colors.textSubtle,\n          fontFamily: 'Kanit, sans-serif',\n          fontSize: 12,\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n          secondsVisible: true,\n          tickMarkFormatter: (unixTime: number) => {\n            return format(unixTime * 1000, 'MM/dd h:mm a')\n          },\n        },\n        watermark: {\n          visible: false,\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          mode: 1,\n          vertLine: {\n            visible: true,\n            labelVisible: false,\n            style: 3,\n            width: 1,\n            color: theme.colors.textSubtle,\n            labelBackgroundColor: theme.colors.primary,\n          },\n        },\n      })\n\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [chartCreated, data, setValue, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addCandlestickSeries({\n        upColor: theme.colors.success,\n        downColor: theme.colors.failure,\n        borderDownColor: theme.colors.failure,\n        borderUpColor: theme.colors.success,\n        wickDownColor: theme.colors.failure,\n        wickUpColor: theme.colors.success,\n      })\n\n      series.setData(data)\n\n      // update the title when hovering on the chart\n      chartCreated.subscribeCrosshairMove((param) => {\n        if (\n          chartRef?.current &&\n          (param === undefined ||\n            param.time === undefined ||\n            (param && param.point && param.point.x < 0) ||\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n            (param && param.point && param.point.y < 0) ||\n            (param && param.point && param.point.y > CANDLE_CHART_HEIGHT))\n        ) {\n          // reset values\n          if (setValue) setValue(undefined)\n          if (setLabel) setLabel(undefined)\n        } else if (series && param) {\n          const timestamp = param.time as number\n          const now = new Date(timestamp * 1000)\n          const time = `${now.toLocaleString(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: '2-digit',\n            timeZone: 'UTC',\n          })} (UTC)`\n          const parsed = param.seriesPrices.get(series) as { open: number } | undefined\n          if (setValue) setValue(parsed?.open)\n          if (setLabel) setLabel(time)\n        }\n      })\n    }\n  }, [locale, chartCreated, data, setValue, setLabel, theme])\n\n  return (\n    <>\n      {!chartCreated && <CandleChartLoader />}\n      <div ref={chartRef} id=\"candle-chart\" {...rest} />\n    </>\n  )\n}\n\nexport default CandleChart\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from 'react'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport {\n  Text,\n  Flex,\n  Box,\n  Button,\n  Card,\n  Breadcrumbs,\n  Heading,\n  Spinner,\n  LinkExternal,\n  useMatchBreakpoints,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Page from 'components/Layout/Page'\nimport { getBscScanLink } from 'utils'\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport SaveIcon from 'views/Info/components/SaveIcon'\nimport { usePoolDatas, usePoolChartData, usePoolTransactions } from 'state/info/hooks'\nimport TransactionTable from 'views/Info/components/InfoTables/TransactionsTable'\nimport { useWatchlistPools } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ChartCard from 'views/Info/components/InfoCharts/ChartCard'\n\nconst ContentLayout = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-gap: 1em;\n  margin-top: 16px;\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst TokenButton = styled(Flex)`\n  padding: 8px 0px;\n  margin-right: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst LockedTokensContainer = styled(Flex)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 16px;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 8px;\n  border-radius: 16px;\n  max-width: 280px;\n`\n\nconst PoolPage: React.FC<RouteComponentProps<{ address: string }>> = ({\n  match: {\n    params: { address: routeAddress },\n  },\n}) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const [showWeeklyData, setShowWeeklyData] = useState(0)\n  const { tooltip, tooltipVisible, targetRef } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {},\n  )\n\n  // Needed to scroll up if user comes to this page by clicking on entry in the table\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // In case somebody pastes checksummed address into url (since GraphQL expects lowercase address)\n  const address = routeAddress.toLowerCase()\n\n  const poolData = usePoolDatas([address])[0]\n  const chartData = usePoolChartData(address)\n  const transactions = usePoolTransactions(address)\n\n  const [watchlistPools, addPoolToWatchlist] = useWatchlistPools()\n\n  return (\n    <Page symbol={poolData ? `${poolData?.token0.symbol} / ${poolData?.token1.symbol}` : null}>\n      {poolData ? (\n        <>\n          <Flex justifyContent=\"space-between\" mb=\"16px\" flexDirection={['column', 'column', 'row']}>\n            <Breadcrumbs mb=\"32px\">\n              <Link to=\"/info\">\n                <Text color=\"primary\">{t('Info')}</Text>\n              </Link>\n              <Link to=\"/info/pools\">\n                <Text color=\"primary\">{t('Pools')}</Text>\n              </Link>\n              <Flex>\n                <Text mr=\"8px\">{`${poolData.token0.symbol} / ${poolData.token1.symbol}`}</Text>\n              </Flex>\n            </Breadcrumbs>\n            <Flex justifyContent={[null, null, 'flex-end']} mt={['8px', '8px', 0]}>\n              <LinkExternal mr=\"8px\" href={getBscScanLink(address, 'address')}>\n                {t('View on BscScan')}\n              </LinkExternal>\n              <SaveIcon fill={watchlistPools.includes(address)} onClick={() => addPoolToWatchlist(address)} />\n            </Flex>\n          </Flex>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb={['8px', null]}>\n              <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} size={32} />\n              <Text\n                ml=\"38px\"\n                bold\n                fontSize={isXs || isSm ? '24px' : '40px'}\n                id=\"info-pool-pair-title\"\n              >{`${poolData.token0.symbol} / ${poolData.token1.symbol}`}</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\" flexDirection={['column', 'column', 'column', 'row']}>\n              <Flex flexDirection={['column', 'column', 'row']} mb={['8px', '8px', null]}>\n                <Link to={`/info/token/${poolData.token0.address}`}>\n                  <TokenButton>\n                    <CurrencyLogo address={poolData.token0.address} size=\"24px\" />\n                    <Text fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width=\"fit-content\">\n                      {`1 ${poolData.token0.symbol} =  ${formatAmount(poolData.token1Price, {\n                        notation: 'standard',\n                        displayThreshold: 0.001,\n                        tokenPrecision: true,\n                      })} ${poolData.token1.symbol}`}\n                    </Text>\n                  </TokenButton>\n                </Link>\n                <Link to={`/info/token/${poolData.token1.address}`}>\n                  <TokenButton ml={[null, null, '10px']}>\n                    <CurrencyLogo address={poolData.token1.address} size=\"24px\" />\n                    <Text fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width=\"fit-content\">\n                      {`1 ${poolData.token1.symbol} =  ${formatAmount(poolData.token0Price, {\n                        notation: 'standard',\n                        displayThreshold: 0.001,\n                        tokenPrecision: true,\n                      })} ${poolData.token0.symbol}`}\n                    </Text>\n                  </TokenButton>\n                </Link>\n              </Flex>\n              <Flex>\n                <Link to={`/add/${poolData.token0.address}/${poolData.token1.address}`}>\n                  <Button mr=\"8px\" variant=\"secondary\">\n                    {t('Add Liquidity')}\n                  </Button>\n                </Link>\n                <Link to={`/swap?inputCurrency=${poolData.token0.address}&outputCurrency=${poolData.token1.address}`}>\n                  <Button>{t('Trade')}</Button>\n                </Link>\n              </Flex>\n            </Flex>\n          </Flex>\n          <ContentLayout>\n            <Box>\n              <Card>\n                <Box p=\"24px\">\n                  <Flex justifyContent=\"space-between\">\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                        {t('Liquidity')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${formatAmount(poolData.liquidityUSD)}\n                      </Text>\n                      <Percent value={poolData.liquidityUSDChange} />\n                    </Flex>\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                        {t('LP reward APR')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        {formatAmount(poolData.lpApr7d)}%\n                      </Text>\n                      <Flex alignItems=\"center\">\n                        <span ref={targetRef}>\n                          <HelpIcon color=\"textSubtle\" />\n                        </span>\n                        <Text ml=\"4px\" fontSize=\"12px\" color=\"textSubtle\">\n                          {t('7D performance')}\n                        </Text>\n                        {tooltipVisible && tooltip}\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  <Text color=\"secondary\" bold mt=\"24px\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Total Tokens Locked')}\n                  </Text>\n                  <LockedTokensContainer>\n                    <Flex justifyContent=\"space-between\">\n                      <Flex>\n                        <CurrencyLogo address={poolData.token0.address} size=\"24px\" />\n                        <Text small color=\"textSubtle\" ml=\"8px\">\n                          {poolData.token0.symbol}\n                        </Text>\n                      </Flex>\n                      <Text small>{formatAmount(poolData.liquidityToken0)}</Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                      <Flex>\n                        <CurrencyLogo address={poolData.token1.address} size=\"24px\" />\n                        <Text small color=\"textSubtle\" ml=\"8px\">\n                          {poolData.token1.symbol}\n                        </Text>\n                      </Flex>\n                      <Text small>{formatAmount(poolData.liquidityToken1)}</Text>\n                    </Flex>\n                  </LockedTokensContainer>\n                </Box>\n              </Card>\n              <Card mt=\"16px\">\n                <Flex flexDirection=\"column\" p=\"24px\">\n                  <ButtonMenu\n                    activeIndex={showWeeklyData}\n                    onItemClick={(index) => setShowWeeklyData(index)}\n                    scale=\"sm\"\n                    variant=\"subtle\"\n                  >\n                    <ButtonMenuItem width=\"100%\">{t('24H')}</ButtonMenuItem>\n                    <ButtonMenuItem width=\"100%\">{t('7D')}</ButtonMenuItem>\n                  </ButtonMenu>\n                  <Flex mt=\"24px\">\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n                        {showWeeklyData ? t('Volume 7D') : t('Volume 24H')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${showWeeklyData ? formatAmount(poolData.volumeUSDWeek) : formatAmount(poolData.volumeUSD)}\n                      </Text>\n                      <Percent value={showWeeklyData ? poolData.volumeUSDChangeWeek : poolData.volumeUSDChange} />\n                    </Flex>\n                    <Flex flex=\"1\" flexDirection=\"column\">\n                      <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n                        {showWeeklyData ? t('LP reward fees 7D') : t('LP reward fees 24H')}\n                      </Text>\n                      <Text fontSize=\"24px\" bold>\n                        ${showWeeklyData ? formatAmount(poolData.lpFees7d) : formatAmount(poolData.lpFees24h)}\n                      </Text>\n                      <Text color=\"textSubtle\" fontSize=\"12px\">\n                        {t('out of $%totalFees% total fees', {\n                          totalFees: showWeeklyData\n                            ? formatAmount(poolData.totalFees7d)\n                            : formatAmount(poolData.totalFees24h),\n                        })}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Card>\n            </Box>\n            <ChartCard variant=\"pool\" chartData={chartData} />\n          </ContentLayout>\n          <Heading mb=\"16px\" mt=\"40px\" scale=\"lg\">\n            {t('Transactions')}\n          </Heading>\n          <TransactionTable transactions={transactions} />\n        </>\n      ) : (\n        <Flex mt=\"80px\" justifyContent=\"center\">\n          <Spinner />\n        </Flex>\n      )}\n    </Page>\n  )\n}\n\nexport default PoolPage\n","import React, { useMemo, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, Card } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useAllTokenData } from 'state/info/hooks'\nimport { TokenData } from 'state/info/types'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CardWrapper = styled(Link)`\n  display: inline-block;\n  min-width: 190px;\n  margin-left: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst TopMoverCard = styled(Box)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  padding: 16px;\n`\n\nexport const ScrollableRow = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  padding: 16px 0;\n  white-space: nowrap;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst DataCard = ({ tokenData }: { tokenData: TokenData }) => {\n  return (\n    <CardWrapper to={`/info/token/${tokenData.address}`}>\n      <TopMoverCard>\n        <Flex>\n          <Box width=\"32px\" height=\"32px\">\n            {/* wrapped in a box because of alignment issues between img and svg */}\n            <CurrencyLogo address={tokenData.address} size=\"32px\" />\n          </Box>\n          <Box ml=\"16px\">\n            <Text>{tokenData.symbol}</Text>\n            <Flex alignItems=\"center\">\n              <Text fontSize=\"14px\" mr=\"6px\" lineHeight=\"16px\">\n                ${formatAmount(tokenData.priceUSD)}\n              </Text>\n              <Percent fontSize=\"14px\" value={tokenData.priceUSDChange} />\n            </Flex>\n          </Box>\n        </Flex>\n      </TopMoverCard>\n    </CardWrapper>\n  )\n}\n\nconst TopTokenMovers: React.FC = () => {\n  const allTokens = useAllTokenData()\n  const { t } = useTranslation()\n\n  const topPriceIncrease = useMemo(() => {\n    return Object.values(allTokens)\n      .sort(({ data: a }, { data: b }) => {\n        // eslint-disable-next-line no-nested-ternary\n        return a && b ? (Math.abs(a?.priceUSDChange) > Math.abs(b?.priceUSDChange) ? -1 : 1) : -1\n      })\n      .slice(0, Math.min(20, Object.values(allTokens).length))\n  }, [allTokens])\n\n  const increaseRef = useRef<HTMLDivElement>(null)\n  const moveLeftRef = useRef<boolean>(true)\n\n  useEffect(() => {\n    const scrollInterval = setInterval(() => {\n      if (increaseRef.current) {\n        if (increaseRef.current.scrollLeft === increaseRef.current.scrollWidth - increaseRef.current.clientWidth) {\n          moveLeftRef.current = false\n        } else if (increaseRef.current.scrollLeft === 0) {\n          moveLeftRef.current = true\n        }\n        increaseRef.current.scrollTo(\n          moveLeftRef.current ? increaseRef.current.scrollLeft + 1 : increaseRef.current.scrollLeft - 1,\n          0,\n        )\n      }\n    }, 30)\n\n    return () => {\n      clearInterval(scrollInterval)\n    }\n  }, [])\n\n  if (topPriceIncrease.length === 0 || !topPriceIncrease.some((entry) => entry.data)) {\n    return null\n  }\n\n  return (\n    <Card my=\"16px\">\n      <Text ml=\"16px\" mt=\"8px\">\n        {t('Top Movers')}\n      </Text>\n      <ScrollableRow ref={increaseRef}>\n        {topPriceIncrease.map((entry) =>\n          entry.data ? <DataCard key={`top-card-token-${entry.data?.address}`} tokenData={entry.data} /> : null,\n        )}\n      </ScrollableRow>\n    </Card>\n  )\n}\n\nexport default TopTokenMovers\n","import React, { useMemo, useEffect } from 'react'\nimport { Text, Heading, Card } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport TokenTable from 'views/Info/components/InfoTables/TokensTable'\nimport { useAllTokenData, useTokenDatas } from 'state/info/hooks'\nimport { useWatchlistTokens } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport TopTokenMovers from 'views/Info/components/TopTokenMovers'\n\nconst TokensOverview: React.FC = () => {\n  const { t } = useTranslation()\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((token) => token.data)\n      .filter((token) => token)\n  }, [allTokens])\n\n  const [savedTokens] = useWatchlistTokens()\n  const watchListTokens = useTokenDatas(savedTokens)\n\n  return (\n    <Page>\n      <Heading scale=\"lg\" mb=\"16px\">\n        {t('Your Watchlist')}\n      </Heading>\n      {savedTokens.length > 0 ? (\n        <TokenTable tokenDatas={watchListTokens} />\n      ) : (\n        <Card>\n          <Text py=\"16px\" px=\"24px\">\n            {t('Saved tokens will appear here')}\n          </Text>\n        </Card>\n      )}\n      <TopTokenMovers />\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\" id=\"info-tokens-title\">\n        {t('All Tokens')}\n      </Heading>\n      <TokenTable tokenDatas={formattedTokens} />\n    </Page>\n  )\n}\n\nexport default TokensOverview\n","import { useState, useEffect } from 'react'\n\n// endpoint to check asset exists and get url to CMC page\n// returns 400 status code if token is not on CMC\nconst CMC_ENDPOINT = 'https://3rdparty-apis.coinmarketcap.com/v1/cryptocurrency/contract?address='\n\n/**\n * Check if asset exists on CMC, if exists\n * return  url, if not return undefined\n * @param address token address (all lowercase, checksummed are not supported by CMC)\n */\nconst useCMCLink = (address: string): string | undefined => {\n  const [cmcPageUrl, setCMCPageUrl] = useState<string | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchLink = async () => {\n      const result = await fetch(`${CMC_ENDPOINT}${address}`)\n      // if link exists, format the url\n      if (result.status === 200) {\n        result.json().then(({ data }) => {\n          setCMCPageUrl(data.url)\n        })\n      }\n    }\n    if (address) {\n      fetchLink()\n    }\n  }, [address])\n\n  return cmcPageUrl\n}\n\nexport default useCMCLink\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useMemo } from 'react'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport { Duration } from 'date-fns'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Box,\n  Heading,\n  Button,\n  Card,\n  Flex,\n  Breadcrumbs,\n  Link as UIKitLink,\n  LinkExternal,\n  Spinner,\n  Image,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useCMCLink from 'views/Info/hooks/useCMCLink'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport SaveIcon from 'views/Info/components/SaveIcon'\nimport {\n  usePoolDatas,\n  useTokenData,\n  usePoolsForToken,\n  useTokenChartData,\n  useTokenPriceData,\n  useTokenTransactions,\n} from 'state/info/hooks'\nimport PoolTable from 'views/Info/components/InfoTables/PoolsTable'\nimport TransactionTable from 'views/Info/components/InfoTables/TransactionsTable'\nimport { useWatchlistTokens } from 'state/user/hooks'\nimport { ONE_HOUR_SECONDS } from 'config/constants/info'\nimport { useTranslation } from 'contexts/Localization'\nimport ChartCard from 'views/Info/components/InfoCharts/ChartCard'\n\nconst ContentLayout = styled.div`\n  margin-top: 16px;\n  display: grid;\n  grid-template-columns: 260px 1fr;\n  grid-gap: 1em;\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\n\nconst StyledCMCLink = styled(UIKitLink)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n\n  & :hover {\n    opacity: 0.8;\n  }\n`\nconst DEFAULT_TIME_WINDOW: Duration = { weeks: 1 }\n\nconst TokenPage: React.FC<RouteComponentProps<{ address: string }>> = ({\n  match: {\n    params: { address: routeAddress },\n  },\n}) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  // Needed to scroll up if user comes to this page by clicking on entry in the table\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  // In case somebody pastes checksummed address into url (since GraphQL expects lowercase address)\n  const address = routeAddress.toLowerCase()\n\n  const cmcLink = useCMCLink(address)\n\n  const tokenData = useTokenData(address)\n  const poolsForToken = usePoolsForToken(address)\n  const poolDatas = usePoolDatas(poolsForToken ?? [])\n  const transactions = useTokenTransactions(address)\n  const chartData = useTokenChartData(address)\n\n  // pricing data\n  const priceData = useTokenPriceData(address, ONE_HOUR_SECONDS, DEFAULT_TIME_WINDOW)\n  const adjustedPriceData = useMemo(() => {\n    // Include latest available price\n    if (priceData && tokenData && priceData.length > 0) {\n      return [\n        ...priceData,\n        {\n          time: new Date().getTime() / 1000,\n          open: priceData[priceData.length - 1].close,\n          close: tokenData?.priceUSD,\n          high: tokenData?.priceUSD,\n          low: priceData[priceData.length - 1].close,\n        },\n      ]\n    }\n    return undefined\n  }, [priceData, tokenData])\n\n  const [watchlistTokens, addWatchlistToken] = useWatchlistTokens()\n\n  return (\n    <Page symbol={tokenData?.symbol}>\n      {tokenData ? (\n        !tokenData.exists ? (\n          <Card>\n            <Box p=\"16px\">\n              <Text>\n                {t('No pool has been created with this token yet. Create one')}\n                <Link style={{ display: 'inline', marginLeft: '6px' }} to={`/add/${address}`}>\n                  {t('here.')}\n                </Link>\n              </Text>\n            </Box>\n          </Card>\n        ) : (\n          <>\n            {/* Stuff on top */}\n            <Flex justifyContent=\"space-between\" mb=\"24px\" flexDirection={['column', 'column', 'row']}>\n              <Breadcrumbs mb=\"32px\">\n                <Link to=\"/info\">\n                  <Text color=\"primary\">{t('Info')}</Text>\n                </Link>\n                <Link to=\"/info/tokens\">\n                  <Text color=\"primary\">{t('Tokens')}</Text>\n                </Link>\n                <Flex>\n                  <Text mr=\"8px\">{tokenData.symbol}</Text>\n                  <Text>{`(${truncateHash(address)})`}</Text>\n                </Flex>\n              </Breadcrumbs>\n              <Flex justifyContent={[null, null, 'flex-end']} mt={['8px', '8px', 0]}>\n                <LinkExternal mr=\"8px\" color=\"primary\" href={getBscScanLink(address, 'address')}>\n                  {t('View on BscScan')}\n                </LinkExternal>\n                {cmcLink && (\n                  <StyledCMCLink href={cmcLink} rel=\"noopener noreferrer nofollow\" target=\"_blank\">\n                    <Image src=\"/images/CMC-logo.svg\" height={22} width={22} alt={t('View token on CoinMarketCap')} />\n                  </StyledCMCLink>\n                )}\n                <SaveIcon fill={watchlistTokens.includes(address)} onClick={() => addWatchlistToken(address)} />\n              </Flex>\n            </Flex>\n            <Flex justifyContent=\"space-between\" flexDirection={['column', 'column', 'column', 'row']}>\n              <Flex flexDirection=\"column\" mb={['8px', null]}>\n                <Flex alignItems=\"center\">\n                  <CurrencyLogo size=\"32px\" address={address} />\n                  <Text\n                    ml=\"12px\"\n                    bold\n                    lineHeight=\"0.7\"\n                    fontSize={isXs || isSm ? '24px' : '40px'}\n                    id=\"info-token-name-title\"\n                  >\n                    {tokenData.name}\n                  </Text>\n                  <Text ml=\"12px\" lineHeight=\"1\" color=\"textSubtle\" fontSize={isXs || isSm ? '14px' : '20px'}>\n                    ({tokenData.symbol})\n                  </Text>\n                </Flex>\n                <Flex mt=\"8px\" ml=\"46px\" alignItems=\"center\">\n                  <Text mr=\"16px\" bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.priceUSD, { notation: 'standard' })}\n                  </Text>\n                  <Percent value={tokenData.priceUSDChange} fontWeight={600} />\n                </Flex>\n              </Flex>\n              <Flex>\n                <Link to={`/add/${address}`}>\n                  <Button mr=\"8px\" variant=\"secondary\">\n                    {t('Add Liquidity')}\n                  </Button>\n                </Link>\n                <Link to={`/swap?inputCurrency=${address}`}>\n                  <Button>{t('Trade')}</Button>\n                </Link>\n              </Flex>\n            </Flex>\n\n            {/* data on the right side of chart */}\n            <ContentLayout>\n              <Card>\n                <Box p=\"24px\">\n                  <Text bold small color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Liquidity')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.liquidityUSD)}\n                  </Text>\n                  <Percent value={tokenData.liquidityUSDChange} />\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Volume 24H')}\n                  </Text>\n                  <Text bold fontSize=\"24px\" textTransform=\"uppercase\">\n                    ${formatAmount(tokenData.volumeUSD)}\n                  </Text>\n                  <Percent value={tokenData.volumeUSDChange} />\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Volume 7D')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    ${formatAmount(tokenData.volumeUSDWeek)}\n                  </Text>\n\n                  <Text mt=\"24px\" bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\n                    {t('Transactions 24H')}\n                  </Text>\n                  <Text bold fontSize=\"24px\">\n                    {formatAmount(tokenData.txCount, { isInteger: true })}\n                  </Text>\n                </Box>\n              </Card>\n              {/* charts card */}\n              <ChartCard\n                variant=\"token\"\n                chartData={chartData}\n                tokenData={tokenData}\n                tokenPriceData={adjustedPriceData}\n              />\n            </ContentLayout>\n\n            {/* pools and transaction tables */}\n            <Heading scale=\"lg\" mb=\"16px\" mt=\"40px\">\n              {t('Pools')}\n            </Heading>\n\n            <PoolTable poolDatas={poolDatas} />\n\n            <Heading scale=\"lg\" mb=\"16px\" mt=\"40px\">\n              {t('Transactions')}\n            </Heading>\n\n            <TransactionTable transactions={transactions} />\n          </>\n        )\n      ) : (\n        <Flex mt=\"80px\" justifyContent=\"center\">\n          <Spinner />\n        </Flex>\n      )}\n    </Page>\n  )\n}\n\nexport default TokenPage\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport { isAddress } from 'ethers/lib/utils'\nimport TokenPage from './TokenPage'\n\nconst RedirectInvalidToken = (props: RouteComponentProps<{ address: string }>) => {\n  const {\n    match: {\n      params: { address },\n    },\n  } = props\n\n  // In case somebody pastes checksummed address into url (since GraphQL expects lowercase address)\n  if (!isAddress(address.toLowerCase())) {\n    return <Redirect to=\"/\" />\n  }\n  return <TokenPage {...props} />\n}\n\nexport default RedirectInvalidToken\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { PoolUpdater, ProtocolUpdater, TokenUpdater } from 'state/info/updaters'\nimport InfoNav from './components/InfoNav'\nimport Overview from './Overview'\nimport Pools from './Pools'\nimport PoolPage from './Pools/PoolPage'\nimport Tokens from './Tokens'\nimport RedirectInvalidToken from './Tokens/redirects'\n\nconst Info: React.FC = () => {\n  return (\n    <>\n      <ProtocolUpdater />\n      <PoolUpdater />\n      <TokenUpdater />\n      <InfoNav />\n      <Route path=\"/info\" exact>\n        <Overview />\n      </Route>\n      <Route path=\"/info/pools\" exact>\n        <Pools />\n      </Route>\n      <Route path=\"/info/tokens\" exact>\n        <Tokens />\n      </Route>\n      <Route exact path={['/info/tokens/:address', '/info/token/:address']} component={RedirectInvalidToken} />\n      <Route exact path={['/info/pools/:address', '/info/pool/:address', '/info/pair/:address']} component={PoolPage} />\n    </>\n  )\n}\n\nexport default Info\n","import React from 'react'\nimport { Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(Flex)`\n  overflow-x: scroll;\n  padding: 0;\n  border-radius: 24px 24px 0 0;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  scrollbar-width: none; /* Firefox */\n`\n\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.input};\n  width: 100%;\n`\n\ninterface TabProps {\n  isActive?: boolean\n  onClick?: () => void\n}\n\nexport const TabToggle = styled.button<TabProps>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  flex: 1;\n  border: 0;\n  outline: 0;\n  padding: 16px;\n  margin: 0;\n  border-radius: 24px 24px 0 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme, isActive }) => (isActive ? theme.colors.text : theme.colors.textSubtle)};\n  background-color: ${({ theme, isActive }) => (isActive ? theme.card.background : theme.colors.input)};\n`\n\ninterface TabToggleGroupProps {\n  children: React.ReactElement[]\n}\n\nexport const TabToggleGroup: React.FC<TabToggleGroupProps> = ({ children }) => {\n  return (\n    <Wrapper p={['0 4px', '0 16px']}>\n      <Inner>{children}</Inner>\n    </Wrapper>\n  )\n}\n"],"sourceRoot":""}